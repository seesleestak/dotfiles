{"version":3,"sources":["webpack:///webpack/bootstrap 5f46f6a77567884105a5","webpack:///./adblockpluscore/lib/filterClasses.js","webpack:///./adblockpluscore/lib/filterNotifier.js","webpack:///./lib/prefs.js","webpack:///./adblockpluscore/lib/matcher.js","webpack:///./lib/url.js","webpack:///./adblockpluscore/lib/filterStorage.js","webpack:///./adblockpluscore/lib/events.js","webpack:///./adblockpluscore/lib/coreUtils.js","webpack:///./adblockpluscore/lib/subscriptionClasses.js","webpack:///./lib/messaging.js","webpack:///./buildtools/info.js","webpack:///./qunit/common.js","webpack:///./lib/io.js","webpack:///./adblockpluscore/lib/common.js","webpack:///./adblockpluscore/lib/elemHide.js","webpack:///./qunit/tests/prefs.js","webpack:///./qunit/tests/url.js","webpack:///./lib/tldjs.js","webpack:///./lib/punycode.js","webpack:///./qunit/tests/cssEscaping.js","webpack:///./lib/filterComposer.js","webpack:///./lib/whitelisting.js","webpack:///./lib/devtools.js","webpack:///./adblockpluscore/lib/rsa.js","webpack:///./adblockpluscore/lib/jsbn.js","webpack:///./adblockpluscore/lib/rusha.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,OAAO,eAAe;AACtB,OAAO,OAAO;AACd,OAAO,eAAe;;AAEtB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC,aAAa,OAAO,mBAAmB,WAAW,GAAG,OAAO;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4CAA4C,iCAAiC;AAC7E;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,SAAS,aAAa;AACtB,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;AChkCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,aAAa;AACpB,OAAO,KAAK;;AAEZ;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,oBAAoB;AAC/B,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC,aAAa,EAAE;AACf,aAAa,EAAE;AACf,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACrFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,aAAa;;AAEpB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,IAAI;AACjB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,mCAAmC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,yDAAyD,EAAE;AACtE;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;;;;;;;ACtYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,wBAAwB;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,GAAG;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,6DAA6D,GAAG;AAChE;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,GAAG;AAChE;AACA;AACA;;AAEA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;;;;;;AChbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,UAAU;AACjB;;AAEA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO,SAAS;;AAEhB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA,OAAO,eAAe;;AAEtB;AACA;AACA,SAAS,SAAS;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,IAAI;AACf,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,GAAG;AACV,OAAO,MAAM;AACb,OAAO,qBAAqB;AAC5B,OAAO;AACP,4BAA4B;AAC5B,OAAO,eAAe;;AAEtB;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,oBAAoB;AACjC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,oBAAoB;AACjC;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,oBAAoB;AACjC;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,YAAY;AACZ,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP,qCAAqC;AACrC,OAAO,eAAe;AACtB,OAAO,aAAa;;AAEpB;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AC7jBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,aAAa;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;AClIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,0C;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,cAAc;AACrB,OAAO,aAAa;AACpB,OAAO,OAAO;AACd,OAAO,eAAe;AACtB,OAAO,SAAS;AAChB,OAAO,MAAM;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,SAAS;AACtB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gDAAgD,4BAA4B;AAC5E;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,OAAO,kBAAkB;AACzB,OAAO,eAAe;;AAEtB;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACxYA;;AAEA;AACA,SAAS,MAAM;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;AACP;AACA;AACA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,sBAAsB;;AAEtB;AACA;AACA,qCAAqC;AACrC,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,IAAI;AACJ,mCAAmC;AACnC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mCAAmC;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB,4CAA4C,qBAAqB;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;;AAE/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;AC7cA;;AAEA;AACA,SAAS,uBAAuB;AAChC;AACA,SAAS,oBAAoB;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,qBAAqB;AACrB,OAAO;;AAEP;AACA;AACA,qBAAqB,SAAS;;AAE9B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,qBAAqB;AACrB,OAAO;AACP;;AAEA,mBAAmB,UAAU;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,eAAe;AACtB,OAAO,aAAa;AACpB,OAAO,eAAe;AACtB,OAAO,MAAM;AACb,OAAO,iDAAiD;AACxD,OAAO,yBAAyB;AAChC,OAAO,KAAK;AACZ;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA,OAAO,YAAY;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAA4C;AAClE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,sCAAsC,mBAAmB;AACzD,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,kBAAkB;AAClB,CAAC;;;;;;;;ACrVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,eAAe;AACtB,OAAO,qBAAqB;AAC5B,OAAO,eAAe;AACtB,OAAO,cAAc;AACrB,OAAO;AACP,0CAA0C;AAC1C,OAAO,KAAK;AACZ,OAAO,uBAAuB;AAC9B,OAAO,gBAAgB;;AAEvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,2BAA2B,kBAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;AACP;AACA,sBAAsB;AACtB,OAAO,oBAAoB;AAC3B;AACA,OAAO,cAAc;AACrB,OAAO,eAAe;AACtB,OAAO,eAAe;AACtB,OAAO,qBAAqB;AAC5B,OAAO,KAAK;;AAEZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,wBAAwB,gBAAgB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,8BAA8B,2BAA2B;AACzD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACjYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,OAAO,WAAW;AAClB;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6BAA6B;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY,SAAS;AACrB;AACA,YAAY,SAAS;;AAErB,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,eAAe,cAAc,UAAU;;AAExD;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,QAAQ,qBAAqB,QAAQ;AACrC;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,+CAA+C,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc,KAAK;AACvC;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,eAAe,+BAA+B,UAAU;;AAE7E;AACA,kBAAkB,sCAAsC;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO,SAAS;AACvC,qBAAqB,OAAO,QAAQ;AACpC,qBAAqB,OAAO,QAAQ;AACpC,qBAAqB,OAAO,QAAQ;AACpC,qBAAqB,OAAO,QAAQ;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,SAAS,QAAQ;AACrC;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,eAAe,oBAAoB,oBAAoB;AACvD,QAAQ,cAAc,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,qBAAqB,2BAA2B;AAChD,wBAAwB,mBAAmB,gBAAgB;AAC3D,sBAAsB,eAAe,gBAAgB;;AAErD;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,4BAA4B;AAC5B,8BAA8B;AAC9B,6CAA6C;AAC7C;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc,UAAU;AACjD;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,yBAAyB,eAAe,gBAAgB;;AAExD,oBAAoB;AACpB,2BAA2B,mBAAmB,gBAAgB;;AAE9D;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,6CAA6C;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,WAAW,QAAQ,QAAQ;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC3kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,aAAa;AACb,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC","file":"qunit/tests.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5f46f6a77567884105a5","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * @fileOverview Definition of Filter class and its subclasses.\n */\n\nconst {FilterNotifier} = require(\"./filterNotifier\");\nconst {extend} = require(\"./coreUtils\");\nconst {filterToRegExp} = require(\"./common\");\n\n/**\n * Abstract base class for filters\n *\n * @param {string} text   string representation of the filter\n * @constructor\n */\nfunction Filter(text)\n{\n  this.text = text;\n  this.subscriptions = [];\n}\nexports.Filter = Filter;\n\nFilter.prototype =\n{\n  /**\n   * String representation of the filter\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * Filter subscriptions the filter belongs to\n   * @type {Subscription[]}\n   */\n  subscriptions: null,\n\n  /**\n   * Filter type as a string, e.g. \"blocking\".\n   * @type {string}\n   */\n  get type()\n  {\n    throw new Error(\"Please define filter type in the subclass\");\n  },\n\n  /**\n   * Serializes the filter to an array of strings for writing out on the disk.\n   * @param {string[]} buffer  buffer to push the serialization results into\n   */\n  serialize(buffer)\n  {\n    buffer.push(\"[Filter]\");\n    buffer.push(\"text=\" + this.text);\n  },\n\n  toString()\n  {\n    return this.text;\n  }\n};\n\n/**\n * Cache for known filters, maps string representation to filter objects.\n * @type {Map.<string,Filter>}\n */\nFilter.knownFilters = new Map();\n\n/**\n * Regular expression that element hiding filters should match\n * @type {RegExp}\n */\nFilter.elemhideRegExp = /^([^/*|@\"!]*?)#([@?])?#(.+)$/;\n/**\n * Regular expression that RegExp filters specified as RegExps should match\n * @type {RegExp}\n */\nFilter.regexpRegExp = /^(@@)?\\/.*\\/(?:\\$~?[\\w-]+(?:=[^,\\s]+)?(?:,~?[\\w-]+(?:=[^,\\s]+)?)*)?$/;\n/**\n * Regular expression that options on a RegExp filter should match\n * @type {RegExp}\n */\nFilter.optionsRegExp = /\\$(~?[\\w-]+(?:=[^,]+)?(?:,~?[\\w-]+(?:=[^,]+)?)*)$/;\n/**\n * Regular expression that matches an invalid Content Security Policy\n * @type {RegExp}\n */\nFilter.invalidCSPRegExp = /(;|^) ?(base-uri|referrer|report-to|report-uri|upgrade-insecure-requests)\\b/i;\n\n/**\n * Creates a filter of correct type from its text representation - does the\n * basic parsing and calls the right constructor then.\n *\n * @param {string} text   as in Filter()\n * @return {Filter}\n */\nFilter.fromText = function(text)\n{\n  let filter = Filter.knownFilters.get(text);\n  if (filter)\n    return filter;\n\n  let match = (text.includes(\"#\") ? Filter.elemhideRegExp.exec(text) : null);\n  if (match)\n  {\n    let propsMatch;\n    if (!match[2] &&\n        (propsMatch = /\\[-abp-properties=([\"'])([^\"']+)\\1\\]/.exec(match[3])))\n    {\n      // This is legacy CSS properties syntax, convert to current syntax\n      let prefix = match[3].substr(0, propsMatch.index);\n      let expression = propsMatch[2];\n      let suffix = match[3].substr(propsMatch.index + propsMatch[0].length);\n      return Filter.fromText(`${match[1]}#?#` +\n          `${prefix}:-abp-properties(${expression})${suffix}`);\n    }\n\n    filter = ElemHideBase.fromText(\n      text, match[1], match[2], match[3]\n    );\n  }\n  else if (text[0] == \"!\")\n    filter = new CommentFilter(text);\n  else\n    filter = RegExpFilter.fromText(text);\n\n  Filter.knownFilters.set(filter.text, filter);\n  return filter;\n};\n\n/**\n * Deserializes a filter\n *\n * @param {Object}  obj map of serialized properties and their values\n * @return {Filter} filter or null if the filter couldn't be created\n */\nFilter.fromObject = function(obj)\n{\n  let filter = Filter.fromText(obj.text);\n  if (filter instanceof ActiveFilter)\n  {\n    if (\"disabled\" in obj)\n      filter._disabled = (obj.disabled == \"true\");\n    if (\"hitCount\" in obj)\n      filter._hitCount = parseInt(obj.hitCount, 10) || 0;\n    if (\"lastHit\" in obj)\n      filter._lastHit = parseInt(obj.lastHit, 10) || 0;\n  }\n  return filter;\n};\n\n/**\n * Removes unnecessary whitespaces from filter text, will only return null if\n * the input parameter is null.\n * @param {string} text\n * @return {string}\n */\nFilter.normalize = function(text)\n{\n  if (!text)\n    return text;\n\n  // Remove line breaks, tabs etc\n  text = text.replace(/[^\\S ]+/g, \"\");\n\n  // Don't remove spaces inside comments\n  if (/^ *!/.test(text))\n    return text.trim();\n\n  // Special treatment for element hiding filters, right side is allowed to\n  // contain spaces\n  if (Filter.elemhideRegExp.test(text))\n  {\n    let [, domain, separator, selector] = /^(.*?)(#[@?]?#?)(.*)$/.exec(text);\n    return domain.replace(/ +/g, \"\") + separator + selector.trim();\n  }\n\n  // For most regexp filters we strip all spaces, but $csp filter options\n  // are allowed to contain single (non trailing) spaces.\n  let strippedText = text.replace(/ +/g, \"\");\n  if (!strippedText.includes(\"$\") || !/\\bcsp=/i.test(strippedText))\n    return strippedText;\n\n  let optionsMatch = Filter.optionsRegExp.exec(strippedText);\n  if (!optionsMatch)\n    return strippedText;\n\n  // For $csp filters we must first separate out the options part of the\n  // text, being careful to preserve its spaces.\n  let beforeOptions = strippedText.substring(0, optionsMatch.index);\n  let strippedDollarIndex = -1;\n  let dollarIndex = -1;\n  do\n  {\n    strippedDollarIndex = beforeOptions.indexOf(\"$\", strippedDollarIndex + 1);\n    dollarIndex = text.indexOf(\"$\", dollarIndex + 1);\n  }\n  while (strippedDollarIndex != -1);\n  let optionsText = text.substr(dollarIndex + 1);\n\n  // Then we can normalize spaces in the options part safely\n  let options = optionsText.split(\",\");\n  for (let i = 0; i < options.length; i++)\n  {\n    let option = options[i];\n    let cspMatch = /^ *c *s *p *=/i.exec(option);\n    if (cspMatch)\n    {\n      options[i] = cspMatch[0].replace(/ +/g, \"\") +\n                   option.substr(cspMatch[0].length).trim().replace(/ +/g, \" \");\n    }\n    else\n      options[i] = option.replace(/ +/g, \"\");\n  }\n\n  return beforeOptions + \"$\" + options.join();\n};\n\n/**\n * @see filterToRegExp\n */\nFilter.toRegExp = filterToRegExp;\n\n/**\n * Class for invalid filters\n * @param {string} text see Filter()\n * @param {string} reason Reason why this filter is invalid\n * @constructor\n * @augments Filter\n */\nfunction InvalidFilter(text, reason)\n{\n  Filter.call(this, text);\n\n  this.reason = reason;\n}\nexports.InvalidFilter = InvalidFilter;\n\nInvalidFilter.prototype = extend(Filter, {\n  type: \"invalid\",\n\n  /**\n   * Reason why this filter is invalid\n   * @type {string}\n   */\n  reason: null,\n\n  /**\n   * See Filter.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer) {}\n});\n\n/**\n * Class for comments\n * @param {string} text see Filter()\n * @constructor\n * @augments Filter\n */\nfunction CommentFilter(text)\n{\n  Filter.call(this, text);\n}\nexports.CommentFilter = CommentFilter;\n\nCommentFilter.prototype = extend(Filter, {\n  type: \"comment\",\n\n  /**\n   * See Filter.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer) {}\n});\n\n/**\n * Abstract base class for filters that can get hits\n * @param {string} text\n *   see Filter()\n * @param {string} [domains]\n *   Domains that the filter is restricted to separated by domainSeparator\n *   e.g. \"foo.com|bar.com|~baz.com\"\n * @constructor\n * @augments Filter\n */\nfunction ActiveFilter(text, domains)\n{\n  Filter.call(this, text);\n\n  this.domainSource = domains;\n}\nexports.ActiveFilter = ActiveFilter;\n\nActiveFilter.prototype = extend(Filter, {\n  _disabled: false,\n  _hitCount: 0,\n  _lastHit: 0,\n\n  /**\n   * Defines whether the filter is disabled\n   * @type {boolean}\n   */\n  get disabled()\n  {\n    return this._disabled;\n  },\n  set disabled(value)\n  {\n    if (value != this._disabled)\n    {\n      let oldValue = this._disabled;\n      this._disabled = value;\n      FilterNotifier.triggerListeners(\"filter.disabled\", this, value, oldValue);\n    }\n    return this._disabled;\n  },\n\n  /**\n   * Number of hits on the filter since the last reset\n   * @type {number}\n   */\n  get hitCount()\n  {\n    return this._hitCount;\n  },\n  set hitCount(value)\n  {\n    if (value != this._hitCount)\n    {\n      let oldValue = this._hitCount;\n      this._hitCount = value;\n      FilterNotifier.triggerListeners(\"filter.hitCount\", this, value, oldValue);\n    }\n    return this._hitCount;\n  },\n\n  /**\n   * Last time the filter had a hit (in milliseconds since the beginning of the\n   * epoch)\n   * @type {number}\n   */\n  get lastHit()\n  {\n    return this._lastHit;\n  },\n  set lastHit(value)\n  {\n    if (value != this._lastHit)\n    {\n      let oldValue = this._lastHit;\n      this._lastHit = value;\n      FilterNotifier.triggerListeners(\"filter.lastHit\", this, value, oldValue);\n    }\n    return this._lastHit;\n  },\n\n  /**\n   * String that the domains property should be generated from\n   * @type {string}\n   */\n  domainSource: null,\n\n  /**\n   * Separator character used in domainSource property, must be\n   * overridden by subclasses\n   * @type {string}\n   */\n  domainSeparator: null,\n\n  /**\n   * Determines whether the trailing dot in domain names isn't important and\n   * should be ignored, must be overridden by subclasses.\n   * @type {boolean}\n   */\n  ignoreTrailingDot: true,\n\n  /**\n   * Determines whether domainSource is already upper-case,\n   * can be overridden by subclasses.\n   * @type {boolean}\n   */\n  domainSourceIsUpperCase: false,\n\n  /**\n   * Map containing domains that this filter should match on/not match\n   * on or null if the filter should match on all domains\n   * @type {?Map.<string,boolean>}\n   */\n  get domains()\n  {\n    // Despite this property being cached, the getter is called\n    // several times on Safari, due to WebKit bug 132872\n    let prop = Object.getOwnPropertyDescriptor(this, \"domains\");\n    if (prop)\n      return prop.value;\n\n    let domains = null;\n\n    if (this.domainSource)\n    {\n      let source = this.domainSource;\n      if (!this.domainSourceIsUpperCase)\n      {\n        // RegExpFilter already have uppercase domains\n        source = source.toUpperCase();\n      }\n      let list = source.split(this.domainSeparator);\n      if (list.length == 1 && list[0][0] != \"~\")\n      {\n        // Fast track for the common one-domain scenario\n        if (this.ignoreTrailingDot)\n          list[0] = list[0].replace(/\\.+$/, \"\");\n        domains = new Map([[\"\", false], [list[0], true]]);\n      }\n      else\n      {\n        let hasIncludes = false;\n        for (let i = 0; i < list.length; i++)\n        {\n          let domain = list[i];\n          if (this.ignoreTrailingDot)\n            domain = domain.replace(/\\.+$/, \"\");\n          if (domain == \"\")\n            continue;\n\n          let include;\n          if (domain[0] == \"~\")\n          {\n            include = false;\n            domain = domain.substr(1);\n          }\n          else\n          {\n            include = true;\n            hasIncludes = true;\n          }\n\n          if (!domains)\n            domains = new Map();\n\n          domains.set(domain, include);\n        }\n        if (domains)\n          domains.set(\"\", !hasIncludes);\n      }\n\n      this.domainSource = null;\n    }\n\n    Object.defineProperty(this, \"domains\", {value: domains, enumerable: true});\n    return this.domains;\n  },\n\n  /**\n   * Array containing public keys of websites that this filter should apply to\n   * @type {string[]}\n   */\n  sitekeys: null,\n\n  /**\n   * Checks whether this filter is active on a domain.\n   * @param {string} docDomain domain name of the document that loads the URL\n   * @param {string} [sitekey] public key provided by the document\n   * @return {boolean} true in case of the filter being active\n   */\n  isActiveOnDomain(docDomain, sitekey)\n  {\n    // Sitekeys are case-sensitive so we shouldn't convert them to\n    // upper-case to avoid false positives here. Instead we need to\n    // change the way filter options are parsed.\n    if (this.sitekeys &&\n        (!sitekey || this.sitekeys.indexOf(sitekey.toUpperCase()) < 0))\n    {\n      return false;\n    }\n\n    // If no domains are set the rule matches everywhere\n    if (!this.domains)\n      return true;\n\n    // If the document has no host name, match only if the filter\n    // isn't restricted to specific domains\n    if (!docDomain)\n      return this.domains.get(\"\");\n\n    if (this.ignoreTrailingDot)\n      docDomain = docDomain.replace(/\\.+$/, \"\");\n    docDomain = docDomain.toUpperCase();\n\n    while (true)\n    {\n      let isDomainIncluded = this.domains.get(docDomain);\n      if (typeof isDomainIncluded != \"undefined\")\n        return isDomainIncluded;\n\n      let nextDot = docDomain.indexOf(\".\");\n      if (nextDot < 0)\n        break;\n      docDomain = docDomain.substr(nextDot + 1);\n    }\n    return this.domains.get(\"\");\n  },\n\n  /**\n   * Checks whether this filter is active only on a domain and its subdomains.\n   * @param {string} docDomain\n   * @return {boolean}\n   */\n  isActiveOnlyOnDomain(docDomain)\n  {\n    if (!docDomain || !this.domains || this.domains.get(\"\"))\n      return false;\n\n    if (this.ignoreTrailingDot)\n      docDomain = docDomain.replace(/\\.+$/, \"\");\n    docDomain = docDomain.toUpperCase();\n\n    for (let [domain, isIncluded] of this.domains)\n    {\n      if (isIncluded && domain != docDomain)\n      {\n        if (domain.length <= docDomain.length)\n          return false;\n\n        if (!domain.endsWith(\".\" + docDomain))\n          return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Checks whether this filter is generic or specific\n   * @return {boolean}\n   */\n  isGeneric()\n  {\n    return !(this.sitekeys && this.sitekeys.length) &&\n            (!this.domains || this.domains.get(\"\"));\n  },\n\n  /**\n   * See Filter.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer)\n  {\n    if (this._disabled || this._hitCount || this._lastHit)\n    {\n      Filter.prototype.serialize.call(this, buffer);\n      if (this._disabled)\n        buffer.push(\"disabled=true\");\n      if (this._hitCount)\n        buffer.push(\"hitCount=\" + this._hitCount);\n      if (this._lastHit)\n        buffer.push(\"lastHit=\" + this._lastHit);\n    }\n  }\n});\n\n/**\n * Abstract base class for RegExp-based filters\n * @param {string} text see Filter()\n * @param {string} regexpSource\n *   filter part that the regular expression should be build from\n * @param {number} [contentType]\n *   Content types the filter applies to, combination of values from\n *   RegExpFilter.typeMap\n * @param {boolean} [matchCase]\n *   Defines whether the filter should distinguish between lower and upper case\n *   letters\n * @param {string} [domains]\n *   Domains that the filter is restricted to, e.g. \"foo.com|bar.com|~baz.com\"\n * @param {boolean} [thirdParty]\n *   Defines whether the filter should apply to third-party or first-party\n *   content only\n * @param {string} [sitekeys]\n *   Public keys of websites that this filter should apply to\n * @constructor\n * @augments ActiveFilter\n */\nfunction RegExpFilter(text, regexpSource, contentType, matchCase, domains,\n                      thirdParty, sitekeys)\n{\n  ActiveFilter.call(this, text, domains, sitekeys);\n\n  if (contentType != null)\n    this.contentType = contentType;\n  if (matchCase)\n    this.matchCase = matchCase;\n  if (thirdParty != null)\n    this.thirdParty = thirdParty;\n  if (sitekeys != null)\n    this.sitekeySource = sitekeys;\n\n  if (regexpSource.length >= 2 &&\n      regexpSource[0] == \"/\" &&\n      regexpSource[regexpSource.length - 1] == \"/\")\n  {\n    // The filter is a regular expression - convert it immediately to\n    // catch syntax errors\n    let regexp = new RegExp(regexpSource.substr(1, regexpSource.length - 2),\n                            this.matchCase ? \"\" : \"i\");\n    Object.defineProperty(this, \"regexp\", {value: regexp});\n  }\n  else\n  {\n    // No need to convert this filter to regular expression yet, do it on demand\n    this.regexpSource = regexpSource;\n  }\n}\nexports.RegExpFilter = RegExpFilter;\n\nRegExpFilter.prototype = extend(ActiveFilter, {\n  /**\n   * @see ActiveFilter.domainSourceIsUpperCase\n   */\n  domainSourceIsUpperCase: true,\n\n  /**\n   * Number of filters contained, will always be 1 (required to\n   * optimize Matcher).\n   * @type {number}\n   */\n  length: 1,\n\n  /**\n   * @see ActiveFilter.domainSeparator\n   */\n  domainSeparator: \"|\",\n\n  /**\n   * Expression from which a regular expression should be generated -\n   * for delayed creation of the regexp property\n   * @type {string}\n   */\n  regexpSource: null,\n  /**\n   * Regular expression to be used when testing against this filter\n   * @type {RegExp}\n   */\n  get regexp()\n  {\n    // Despite this property being cached, the getter is called\n    // several times on Safari, due to WebKit bug 132872\n    let prop = Object.getOwnPropertyDescriptor(this, \"regexp\");\n    if (prop)\n      return prop.value;\n\n    let source = Filter.toRegExp(this.regexpSource);\n    let regexp = new RegExp(source, this.matchCase ? \"\" : \"i\");\n    Object.defineProperty(this, \"regexp\", {value: regexp});\n    return regexp;\n  },\n  /**\n   * Content types the filter applies to, combination of values from\n   * RegExpFilter.typeMap\n   * @type {number}\n   */\n  contentType: 0x7FFFFFFF,\n  /**\n   * Defines whether the filter should distinguish between lower and\n   * upper case letters\n   * @type {boolean}\n   */\n  matchCase: false,\n  /**\n   * Defines whether the filter should apply to third-party or\n   * first-party content only. Can be null (apply to all content).\n   * @type {boolean}\n   */\n  thirdParty: null,\n\n  /**\n   * String that the sitekey property should be generated from\n   * @type {string}\n   */\n  sitekeySource: null,\n\n  /**\n   * Array containing public keys of websites that this filter should apply to\n   * @type {string[]}\n   */\n  get sitekeys()\n  {\n    // Despite this property being cached, the getter is called\n    // several times on Safari, due to WebKit bug 132872\n    let prop = Object.getOwnPropertyDescriptor(this, \"sitekeys\");\n    if (prop)\n      return prop.value;\n\n    let sitekeys = null;\n\n    if (this.sitekeySource)\n    {\n      sitekeys = this.sitekeySource.split(\"|\");\n      this.sitekeySource = null;\n    }\n\n    Object.defineProperty(\n      this, \"sitekeys\", {value: sitekeys, enumerable: true}\n    );\n    return this.sitekeys;\n  },\n\n  /**\n   * Tests whether the URL matches this filter\n   * @param {string} location URL to be tested\n   * @param {number} typeMask bitmask of content / request types to match\n   * @param {string} docDomain domain name of the document that loads the URL\n   * @param {boolean} thirdParty should be true if the URL is a third-party\n   *                             request\n   * @param {string} sitekey public key provided by the document\n   * @return {boolean} true in case of a match\n   */\n  matches(location, typeMask, docDomain, thirdParty, sitekey)\n  {\n    if (this.contentType & typeMask &&\n        (this.thirdParty == null || this.thirdParty == thirdParty) &&\n        this.isActiveOnDomain(docDomain, sitekey) && this.regexp.test(location))\n    {\n      return true;\n    }\n    return false;\n  }\n});\n\n// Required to optimize Matcher, see also RegExpFilter.prototype.length\nObject.defineProperty(RegExpFilter.prototype, \"0\", {\n  get() { return this; }\n});\n\n/**\n * Creates a RegExp filter from its text representation\n * @param {string} text   same as in Filter()\n * @return {Filter}\n */\nRegExpFilter.fromText = function(text)\n{\n  let blocking = true;\n  let origText = text;\n  if (text.indexOf(\"@@\") == 0)\n  {\n    blocking = false;\n    text = text.substr(2);\n  }\n\n  let contentType = null;\n  let matchCase = null;\n  let domains = null;\n  let sitekeys = null;\n  let thirdParty = null;\n  let collapse = null;\n  let csp = null;\n  let options;\n  let match = (text.indexOf(\"$\") >= 0 ? Filter.optionsRegExp.exec(text) : null);\n  if (match)\n  {\n    options = match[1].split(\",\");\n    text = match.input.substr(0, match.index);\n    for (let option of options)\n    {\n      let value = null;\n      let separatorIndex = option.indexOf(\"=\");\n      if (separatorIndex >= 0)\n      {\n        value = option.substr(separatorIndex + 1);\n        option = option.substr(0, separatorIndex);\n      }\n      option = option.replace(/-/, \"_\").toUpperCase();\n      if (option in RegExpFilter.typeMap)\n      {\n        if (contentType == null)\n          contentType = 0;\n        contentType |= RegExpFilter.typeMap[option];\n\n        if (option == \"CSP\" && value)\n          csp = value;\n      }\n      else if (option[0] == \"~\" && option.substr(1) in RegExpFilter.typeMap)\n      {\n        if (contentType == null)\n          ({contentType} = RegExpFilter.prototype);\n        contentType &= ~RegExpFilter.typeMap[option.substr(1)];\n      }\n      else if (option == \"MATCH_CASE\")\n        matchCase = true;\n      else if (option == \"~MATCH_CASE\")\n        matchCase = false;\n      else if (option == \"DOMAIN\" && value)\n        domains = value.toUpperCase();\n      else if (option == \"THIRD_PARTY\")\n        thirdParty = true;\n      else if (option == \"~THIRD_PARTY\")\n        thirdParty = false;\n      else if (option == \"COLLAPSE\")\n        collapse = true;\n      else if (option == \"~COLLAPSE\")\n        collapse = false;\n      else if (option == \"SITEKEY\" && value)\n        sitekeys = value.toUpperCase();\n      else\n        return new InvalidFilter(origText, \"filter_unknown_option\");\n    }\n  }\n\n  try\n  {\n    if (blocking)\n    {\n      if (csp && Filter.invalidCSPRegExp.test(csp))\n        return new InvalidFilter(origText, \"filter_invalid_csp\");\n\n      return new BlockingFilter(origText, text, contentType, matchCase, domains,\n                                thirdParty, sitekeys, collapse, csp);\n    }\n    return new WhitelistFilter(origText, text, contentType, matchCase, domains,\n                               thirdParty, sitekeys);\n  }\n  catch (e)\n  {\n    return new InvalidFilter(origText, \"filter_invalid_regexp\");\n  }\n};\n\n/**\n * Maps type strings like \"SCRIPT\" or \"OBJECT\" to bit masks\n */\nRegExpFilter.typeMap = {\n  OTHER: 1,\n  SCRIPT: 2,\n  IMAGE: 4,\n  STYLESHEET: 8,\n  OBJECT: 16,\n  SUBDOCUMENT: 32,\n  DOCUMENT: 64,\n  WEBSOCKET: 128,\n  WEBRTC: 256,\n  CSP: 512,\n  XBL: 1,\n  PING: 1024,\n  XMLHTTPREQUEST: 2048,\n  OBJECT_SUBREQUEST: 4096,\n  DTD: 1,\n  MEDIA: 16384,\n  FONT: 32768,\n\n  BACKGROUND: 4,    // Backwards compat, same as IMAGE\n\n  POPUP: 0x10000000,\n  GENERICBLOCK: 0x20000000,\n  ELEMHIDE: 0x40000000,\n  GENERICHIDE: 0x80000000\n};\n\n// CSP, DOCUMENT, ELEMHIDE, POPUP, GENERICHIDE and GENERICBLOCK options\n// shouldn't be there by default\nRegExpFilter.prototype.contentType &= ~(RegExpFilter.typeMap.CSP |\n                                        RegExpFilter.typeMap.DOCUMENT |\n                                        RegExpFilter.typeMap.ELEMHIDE |\n                                        RegExpFilter.typeMap.POPUP |\n                                        RegExpFilter.typeMap.GENERICHIDE |\n                                        RegExpFilter.typeMap.GENERICBLOCK);\n\n/**\n * Class for blocking filters\n * @param {string} text see Filter()\n * @param {string} regexpSource see RegExpFilter()\n * @param {number} contentType see RegExpFilter()\n * @param {boolean} matchCase see RegExpFilter()\n * @param {string} domains see RegExpFilter()\n * @param {boolean} thirdParty see RegExpFilter()\n * @param {string} sitekeys see RegExpFilter()\n * @param {boolean} collapse\n *   defines whether the filter should collapse blocked content, can be null\n * @param {string} [csp]\n *   Content Security Policy to inject when the filter matches\n * @constructor\n * @augments RegExpFilter\n */\nfunction BlockingFilter(text, regexpSource, contentType, matchCase, domains,\n                        thirdParty, sitekeys, collapse, csp)\n{\n  RegExpFilter.call(this, text, regexpSource, contentType, matchCase, domains,\n                    thirdParty, sitekeys);\n\n  this.collapse = collapse;\n  this.csp = csp;\n}\nexports.BlockingFilter = BlockingFilter;\n\nBlockingFilter.prototype = extend(RegExpFilter, {\n  type: \"blocking\",\n\n  /**\n   * Defines whether the filter should collapse blocked content.\n   * Can be null (use the global preference).\n   * @type {boolean}\n   */\n  collapse: null,\n\n  /**\n   * Content Security Policy to inject for matching requests.\n   * @type {string}\n   */\n  csp: null\n});\n\n/**\n * Class for whitelist filters\n * @param {string} text see Filter()\n * @param {string} regexpSource see RegExpFilter()\n * @param {number} contentType see RegExpFilter()\n * @param {boolean} matchCase see RegExpFilter()\n * @param {string} domains see RegExpFilter()\n * @param {boolean} thirdParty see RegExpFilter()\n * @param {string} sitekeys see RegExpFilter()\n * @constructor\n * @augments RegExpFilter\n */\nfunction WhitelistFilter(text, regexpSource, contentType, matchCase, domains,\n                         thirdParty, sitekeys)\n{\n  RegExpFilter.call(this, text, regexpSource, contentType, matchCase, domains,\n                    thirdParty, sitekeys);\n}\nexports.WhitelistFilter = WhitelistFilter;\n\nWhitelistFilter.prototype = extend(RegExpFilter, {\n  type: \"whitelist\"\n});\n\n/**\n * Base class for element hiding filters\n * @param {string} text see Filter()\n * @param {string} [domains] Host names or domains the filter should be\n *                           restricted to\n * @param {string} selector   CSS selector for the HTML elements that should be\n *                            hidden\n * @constructor\n * @augments ActiveFilter\n */\nfunction ElemHideBase(text, domains, selector)\n{\n  ActiveFilter.call(this, text, domains || null);\n\n  if (domains)\n  {\n    this.selectorDomain = domains.replace(/,~[^,]+/g, \"\")\n                                 .replace(/^~[^,]+,?/, \"\").toLowerCase();\n  }\n\n  // Braces are being escaped to prevent CSS rule injection.\n  this.selector = selector.replace(\"{\", \"\\\\7B \").replace(\"}\", \"\\\\7D \");\n}\nexports.ElemHideBase = ElemHideBase;\n\nElemHideBase.prototype = extend(ActiveFilter, {\n  /**\n   * @see ActiveFilter.domainSeparator\n   */\n  domainSeparator: \",\",\n\n  /**\n   * @see ActiveFilter.ignoreTrailingDot\n   */\n  ignoreTrailingDot: false,\n\n  /**\n   * Host name or domain the filter should be restricted to (can be null for\n   * no restriction)\n   * @type {string}\n   */\n  selectorDomain: null,\n  /**\n   * CSS selector for the HTML elements that should be hidden\n   * @type {string}\n   */\n  selector: null\n});\n\n/**\n * Creates an element hiding filter from a pre-parsed text representation\n *\n * @param {string} text         same as in Filter()\n * @param {string?} domain\n *   domain part of the text representation\n * @param {string?} type\n*    rule type, either empty or @ (exception) or ? (emulation rule)\n * @param {string} selector     raw CSS selector\n * @return {ElemHideFilter|ElemHideException|\n *          ElemHideEmulationFilter|InvalidFilter}\n */\nElemHideBase.fromText = function(text, domain, type, selector)\n{\n  // We don't allow ElemHide filters which have any empty domains.\n  // Note: The ElemHide.prototype.domainSeparator is duplicated here, if that\n  // changes this must be changed too.\n  if (domain && /(^|,)~?(,|$)/.test(domain))\n    return new InvalidFilter(text, \"filter_invalid_domain\");\n\n  if (type == \"@\")\n    return new ElemHideException(text, domain, selector);\n\n  if (type == \"?\")\n  {\n    // Element hiding emulation filters are inefficient so we need to make sure\n    // that they're only applied if they specify active domains\n    if (!/,[^~][^,.]*\\.[^,]/.test(\",\" + domain))\n      return new InvalidFilter(text, \"filter_elemhideemulation_nodomain\");\n\n    return new ElemHideEmulationFilter(text, domain, selector);\n  }\n\n  return new ElemHideFilter(text, domain, selector);\n};\n\n/**\n * Class for element hiding filters\n * @param {string} text see Filter()\n * @param {string} domains  see ElemHideBase()\n * @param {string} selector see ElemHideBase()\n * @constructor\n * @augments ElemHideBase\n */\nfunction ElemHideFilter(text, domains, selector)\n{\n  ElemHideBase.call(this, text, domains, selector);\n}\nexports.ElemHideFilter = ElemHideFilter;\n\nElemHideFilter.prototype = extend(ElemHideBase, {\n  type: \"elemhide\"\n});\n\n/**\n * Class for element hiding exceptions\n * @param {string} text see Filter()\n * @param {string} domains  see ElemHideBase()\n * @param {string} selector see ElemHideBase()\n * @constructor\n * @augments ElemHideBase\n */\nfunction ElemHideException(text, domains, selector)\n{\n  ElemHideBase.call(this, text, domains, selector);\n}\nexports.ElemHideException = ElemHideException;\n\nElemHideException.prototype = extend(ElemHideBase, {\n  type: \"elemhideexception\"\n});\n\n/**\n * Class for element hiding emulation filters\n * @param {string} text           see Filter()\n * @param {string} domains        see ElemHideBase()\n * @param {string} selector       see ElemHideBase()\n * @constructor\n * @augments ElemHideBase\n */\nfunction ElemHideEmulationFilter(text, domains, selector)\n{\n  ElemHideBase.call(this, text, domains, selector);\n}\nexports.ElemHideEmulationFilter = ElemHideEmulationFilter;\n\nElemHideEmulationFilter.prototype = extend(ElemHideBase, {\n  type: \"elemhideemulation\"\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/filterClasses.js\n// module id = 0\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * @fileOverview This component manages listeners and calls them to distributes\n * messages about filter changes.\n */\n\nconst {EventEmitter} = require(\"./events\");\nconst {desc} = require(\"./coreUtils\");\n\nconst CATCH_ALL = \"__all\";\n\n/**\n * @callback FilterNotifierCatchAllListener\n * @param {string} action\n * @param {Subscription|Filter} item\n * @param {...*} additionalInfo\n */\n\n/**\n * This class allows registering and triggering listeners for filter events.\n * @class\n */\nexports.FilterNotifier = Object.create(new EventEmitter(), desc({\n  /**\n   * Adds a listener\n   *\n   * @deprecated use FilterNotifier.on(action, callback)\n   * @param {FilterNotifierCatchAllListener} listener\n   */\n  addListener(listener)\n  {\n    let listeners = this._listeners.get(CATCH_ALL);\n    if (!listeners || listeners.indexOf(listener) == -1)\n      this.on(CATCH_ALL, listener);\n  },\n\n  /**\n   * Removes a listener that was previosly added via addListener\n   *\n   * @deprecated use FilterNotifier.off(action, callback)\n   * @param {FilterNotifierCatchAllListener} listener\n   */\n  removeListener(listener)\n  {\n    this.off(CATCH_ALL, listener);\n  },\n\n  /**\n   * Notifies listeners about an event\n   * @param {string} action event code (\"load\", \"save\", \"elemhideupdate\",\n   *                 \"subscription.added\", \"subscription.removed\",\n   *                 \"subscription.disabled\", \"subscription.title\",\n   *                 \"subscription.lastDownload\", \"subscription.downloadStatus\",\n   *                 \"subscription.homepage\", \"subscription.updated\",\n   *                 \"filter.added\", \"filter.removed\", \"filter.moved\",\n   *                 \"filter.disabled\", \"filter.hitCount\", \"filter.lastHit\")\n   * @param {Subscription|Filter} item item that the change applies to\n   * @param {*} param1\n   * @param {*} param2\n   * @param {*} param3\n   * @deprecated use FilterNotifier.emit(action)\n   */\n  triggerListeners(action, item, param1, param2, param3)\n  {\n    this.emit(action, item, param1, param2, param3);\n    this.emit(CATCH_ALL, action, item, param1, param2, param3);\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/filterNotifier.js\n// module id = 1\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module prefs */\n\n\"use strict\";\n\nconst {EventEmitter} = require(\"../adblockpluscore/lib/events\");\n\nconst keyPrefix = \"pref:\";\n\nlet eventEmitter = new EventEmitter();\nlet overrides = Object.create(null);\n\n/** @lends module:prefs.Prefs */\nlet defaults = Object.create(null);\n\n/**\n * Only for compatibility with core code. Please do not change!\n *\n * @type {boolean}\n */\ndefaults.enabled = true;\n/**\n * The application version as set during initialization. Used to detect updates.\n *\n * @type {string}\n */\ndefaults.currentVersion = \"\";\n/**\n * Only for compatibility with core code. Please do not change!\n *\n * @type {string}\n */\ndefaults.data_directory = \"\";\n/**\n * @see https://adblockplus.org/en/preferences#patternsbackups\n * @type {number}\n */\ndefaults.patternsbackups = 0;\n/**\n * @see https://adblockplus.org/en/preferences#patternsbackupinterval\n * @type {number}\n */\ndefaults.patternsbackupinterval = 24;\n/**\n * Only for compatibility with core code. Please do not change!\n *\n * @type {boolean}\n */\ndefaults.savestats = false;\n/**\n * Only for compatibility with core code. Please do not change!\n *\n * @type {boolean}\n */\ndefaults.privateBrowsing = false;\n/**\n * @see https://adblockplus.org/en/preferences#subscriptions_fallbackerrors\n * @type {number}\n */\ndefaults.subscriptions_fallbackerrors = 5;\n/**\n * @see https://adblockplus.org/en/preferences#subscriptions_fallbackurl\n * @type {string}\n */\ndefaults.subscriptions_fallbackurl = \"https://adblockplus.org/getSubscription?version=%VERSION%&url=%SUBSCRIPTION%&downloadURL=%URL%&error=%ERROR%&channelStatus=%CHANNELSTATUS%&responseStatus=%RESPONSESTATUS%\";\n/**\n * @see https://adblockplus.org/en/preferences#subscriptions_autoupdate\n * @type {boolean}\n */\ndefaults.subscriptions_autoupdate = true;\n/**\n * @see https://adblockplus.org/en/preferences#subscriptions_exceptionsurl\n * @type {string}\n */\ndefaults.subscriptions_exceptionsurl = \"https://easylist-downloads.adblockplus.org/exceptionrules.txt\";\n/**\n * @see https://adblockplus.org/en/preferences#subscriptions_exceptionsurl_privacy\n * @type {string}\n */\ndefaults.subscriptions_exceptionsurl_privacy = \"https://easylist-downloads.adblockplus.org/exceptionrules-privacy-friendly.txt\";\n/**\n * @see https://adblockplus.org/en/preferences#subscriptions_antiadblockurl\n * @type {string}\n */\ndefaults.subscriptions_antiadblockurl = \"https://easylist-downloads.adblockplus.org/antiadblockfilters.txt\";\n/**\n * @see https://adblockplus.org/en/preferences#documentation_link\n * @type {string}\n */\ndefaults.documentation_link = \"https://adblockplus.org/redirect?link=%LINK%&lang=%LANG%\";\n/**\n * @see https://adblockplus.org/en/preferences#notificationdata\n * @type {object}\n */\ndefaults.notificationdata = {};\n/**\n * @see https://adblockplus.org/en/preferences#notificationurl\n * @type {string}\n */\ndefaults.notificationurl = \"https://notification.adblockplus.org/notification.json\";\n/**\n * The total number of requests blocked by the extension.\n *\n * @type {number}\n */\ndefaults.blocked_total = 0;\n/**\n * Whether to show a badge in the toolbar icon indicating the number\n * of blocked ads.\n *\n * @type {boolean}\n */\ndefaults.show_statsinicon = true;\n/**\n * Whether to show the number of blocked ads in the popup.\n *\n * @type {boolean}\n */\ndefaults.show_statsinpopup = true;\n/**\n * Whether to show the \"Block element\" context menu entry.\n *\n * @type {boolean}\n */\ndefaults.shouldShowBlockElementMenu = true;\n/**\n * Whether to collapse placeholders for blocked elements.\n *\n * @type {boolean}\n */\ndefaults.hidePlaceholders = true;\n\n/**\n * Whether notification opt-out UI should be shown.\n * @type {boolean}\n */\ndefaults.notifications_showui = false;\n\n/**\n * Whether to show tracking warning in options page when both\n * Acceptable Ads and subscription of type \"Privacy\" are enabled.\n *\n * @type {boolean}\n */\ndefaults.ui_warn_tracking = true;\n\n/**\n * Determines whether data has been cleaned up after upgrading from the legacy\n * extension on Firefox.\n *\n * @type {boolean}\n */\ndefaults.data_cleanup_done = false;\n\n/**\n * Notification categories to be ignored.\n *\n * @type {string[]}\n */\ndefaults.notifications_ignoredcategories = [];\n\n/**\n * Whether to show the developer tools panel.\n *\n * @type {boolean}\n */\ndefaults.show_devtools_panel = true;\n\n/**\n * Whether to suppress the first run and updates page. This preference isn't\n * set by the extension but can be pre-configured externally.\n *\n * @see https://adblockplus.org/development-builds/suppressing-the-first-run-page-on-chrome\n * @type {boolean}\n */\ndefaults.suppress_first_run_page = false;\n\n/**\n * Additonal subscriptions to be automatically added when the extension is\n * loaded. This preference isn't set by the extension but can be pre-configured\n * externally.\n *\n * @type {string[]}\n */\ndefaults.additional_subscriptions = [];\n\n/**\n * The version of major updates that the user is aware of. If it's too low,\n * the updates page will be shown to inform the user about intermediate changes.\n *\n * @type {number}\n */\ndefaults.last_updates_page_displayed = 0;\n\n/**\n  * @namespace\n  * @static\n  */\nlet Prefs = exports.Prefs = {\n  /**\n   * Sets the given preference.\n   *\n   * @param {string} preference\n   * @param {any}    value\n   * @return {Promise} A promise that resolves when the underlying\n                       browser.storage.local.set/remove() operation completes\n   */\n  set(preference, value)\n  {\n    let defaultValue = defaults[preference];\n\n    if (typeof value != typeof defaultValue)\n      throw new Error(\"Attempt to change preference type\");\n\n    if (value == defaultValue)\n    {\n      delete overrides[preference];\n      return browser.storage.local.remove(prefToKey(preference));\n    }\n\n    overrides[preference] = value;\n    return (customSave.get(preference) || savePref)(preference);\n  },\n\n  /**\n   * Adds a callback that is called when the\n   * value of a specified preference changed.\n   *\n   * @param {string}   preference\n   * @param {function} callback\n   */\n  on(preference, callback)\n  {\n    eventEmitter.on(preference, callback);\n  },\n\n  /**\n   * Removes a callback for the specified preference.\n   *\n   * @param {string}   preference\n   * @param {function} callback\n   */\n  off(preference, callback)\n  {\n    eventEmitter.off(preference, callback);\n  },\n\n  /**\n   * A promise that is fullfilled when all preferences have been loaded.\n   * Wait for this promise to be fulfilled before using preferences during\n   * extension initialization.\n   *\n   * @type {Promise}\n   */\n  untilLoaded: null\n};\n\nfunction keyToPref(key)\n{\n  if (key.indexOf(keyPrefix) != 0)\n    return null;\n\n  return key.substr(keyPrefix.length);\n}\n\nfunction prefToKey(pref)\n{\n  return keyPrefix + pref;\n}\n\nfunction savePref(pref)\n{\n  return browser.storage.local.set({[prefToKey(pref)]: overrides[pref]});\n}\n\nlet customSave = new Map();\nif (require(\"../buildtools/info\").platform == \"gecko\")\n{\n  // Saving one storage value causes all others to be saved as well on Gecko.\n  // Make sure that updating ad counter doesn't cause the filters data to be\n  // saved frequently as a side-effect.\n  const MIN_UPDATE_INTERVAL = 60 * 1000;\n  let lastUpdate = -MIN_UPDATE_INTERVAL;\n  let promise = null;\n  customSave.set(\"blocked_total\", pref =>\n  {\n    if (!promise)\n    {\n      promise = new Promise((resolve, reject) =>\n      {\n        setTimeout(\n          () =>\n          {\n            lastUpdate = performance.now();\n            promise = null;\n            savePref(pref).then(resolve, reject);\n          },\n          lastUpdate + MIN_UPDATE_INTERVAL - performance.now()\n        );\n      });\n    }\n    return promise;\n  });\n}\n\nfunction addPreference(pref)\n{\n  Object.defineProperty(Prefs, pref, {\n    get() { return (pref in overrides ? overrides : defaults)[pref]; },\n    set(value)\n    {\n      Prefs.set(pref, value);\n    },\n    enumerable: true\n  });\n}\n\nfunction init()\n{\n  let prefs = Object.keys(defaults);\n  prefs.forEach(addPreference);\n\n  let localLoaded = browser.storage.local.get(prefs.map(prefToKey)).then(\n    items =>\n    {\n      for (let key in items)\n        overrides[keyToPref(key)] = items[key];\n    }\n  );\n\n  let managedLoaded;\n  if (\"managed\" in browser.storage)\n  {\n    managedLoaded = browser.storage.managed.get(null).then(\n      items =>\n      {\n        for (let key in items)\n          defaults[key] = items[key];\n      },\n\n      // Opera doesn't support browser.storage.managed, but instead of simply\n      // removing the API, it gives an asynchronous error which we ignore here.\n      () => {}\n    );\n  }\n  else\n  {\n    managedLoaded = Promise.resolve();\n  }\n\n  function onLoaded()\n  {\n    browser.storage.onChanged.addListener(changes =>\n    {\n      for (let key in changes)\n      {\n        let pref = keyToPref(key);\n        if (pref && pref in defaults)\n        {\n          let change = changes[key];\n          if (\"newValue\" in change && change.newValue != defaults[pref])\n            overrides[pref] = change.newValue;\n          else\n            delete overrides[pref];\n\n          eventEmitter.emit(pref);\n        }\n      }\n    });\n  }\n\n  Prefs.untilLoaded = Promise.all([localLoaded, managedLoaded]).then(onLoaded);\n}\n\ninit();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/prefs.js\n// module id = 2\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * @fileOverview Matcher class implementing matching addresses against\n *               a list of filters.\n */\n\nconst {Filter, WhitelistFilter} = require(\"./filterClasses\");\n\n/**\n * Blacklist/whitelist filter matching\n * @constructor\n */\nfunction Matcher()\n{\n  this.clear();\n}\nexports.Matcher = Matcher;\n\nMatcher.prototype = {\n  /**\n   * Lookup table for filters by their associated keyword\n   * @type {Map.<string,Filter>}\n   */\n  filterByKeyword: null,\n\n  /**\n   * Lookup table for keywords by the filter\n   * @type {Map.<Filter,string>}\n   */\n  keywordByFilter: null,\n\n  /**\n   * Removes all known filters\n   */\n  clear()\n  {\n    this.filterByKeyword = new Map();\n    this.keywordByFilter = new Map();\n  },\n\n  /**\n   * Adds a filter to the matcher\n   * @param {RegExpFilter} filter\n   */\n  add(filter)\n  {\n    if (this.keywordByFilter.has(filter))\n      return;\n\n    // Look for a suitable keyword\n    let keyword = this.findKeyword(filter);\n    let oldEntry = this.filterByKeyword.get(keyword);\n    if (typeof oldEntry == \"undefined\")\n      this.filterByKeyword.set(keyword, filter);\n    else if (oldEntry.length == 1)\n      this.filterByKeyword.set(keyword, [oldEntry, filter]);\n    else\n      oldEntry.push(filter);\n    this.keywordByFilter.set(filter, keyword);\n  },\n\n  /**\n   * Removes a filter from the matcher\n   * @param {RegExpFilter} filter\n   */\n  remove(filter)\n  {\n    let keyword = this.keywordByFilter.get(filter);\n    if (typeof keyword == \"undefined\")\n      return;\n\n    let list = this.filterByKeyword.get(keyword);\n    if (list.length <= 1)\n      this.filterByKeyword.delete(keyword);\n    else\n    {\n      let index = list.indexOf(filter);\n      if (index >= 0)\n      {\n        list.splice(index, 1);\n        if (list.length == 1)\n          this.filterByKeyword.set(keyword, list[0]);\n      }\n    }\n\n    this.keywordByFilter.delete(filter);\n  },\n\n  /**\n   * Chooses a keyword to be associated with the filter\n   * @param {Filter} filter\n   * @return {string} keyword or an empty string if no keyword could be found\n   */\n  findKeyword(filter)\n  {\n    let result = \"\";\n    let {text} = filter;\n    if (Filter.regexpRegExp.test(text))\n      return result;\n\n    // Remove options\n    let match = Filter.optionsRegExp.exec(text);\n    if (match)\n      text = match.input.substr(0, match.index);\n\n    // Remove whitelist marker\n    if (text.substr(0, 2) == \"@@\")\n      text = text.substr(2);\n\n    let candidates = text.toLowerCase().match(\n      /[^a-z0-9%*][a-z0-9%]{3,}(?=[^a-z0-9%*])/g\n    );\n    if (!candidates)\n      return result;\n\n    let hash = this.filterByKeyword;\n    let resultCount = 0xFFFFFF;\n    let resultLength = 0;\n    for (let i = 0, l = candidates.length; i < l; i++)\n    {\n      let candidate = candidates[i].substr(1);\n      let filters = hash.get(candidate);\n      let count = typeof filters != \"undefined\" ? filters.length : 0;\n      if (count < resultCount ||\n          (count == resultCount && candidate.length > resultLength))\n      {\n        result = candidate;\n        resultCount = count;\n        resultLength = candidate.length;\n      }\n    }\n    return result;\n  },\n\n  /**\n   * Checks whether a particular filter is being matched against.\n   * @param {RegExpFilter} filter\n   * @return {boolean}\n   */\n  hasFilter(filter)\n  {\n    return this.keywordByFilter.has(filter);\n  },\n\n  /**\n   * Returns the keyword used for a filter, null for unknown filters.\n   * @param {RegExpFilter} filter\n   * @return {?string}\n   */\n  getKeywordForFilter(filter)\n  {\n    let keyword = this.keywordByFilter.get(filter);\n    return typeof keyword != \"undefined\" ? keyword : null;\n  },\n\n  /**\n   * Checks whether the entries for a particular keyword match a URL\n   * @param {string} keyword\n   * @param {string} location\n   * @param {number} typeMask\n   * @param {string} docDomain\n   * @param {boolean} thirdParty\n   * @param {string} sitekey\n   * @param {boolean} specificOnly\n   * @return {?Filter}\n   */\n  _checkEntryMatch(keyword, location, typeMask, docDomain, thirdParty, sitekey,\n                   specificOnly)\n  {\n    let list = this.filterByKeyword.get(keyword);\n    if (typeof list == \"undefined\")\n      return null;\n    for (let i = 0; i < list.length; i++)\n    {\n      let filter = list[i];\n\n      if (specificOnly && filter.isGeneric() &&\n          !(filter instanceof WhitelistFilter))\n        continue;\n\n      if (filter.matches(location, typeMask, docDomain, thirdParty, sitekey))\n        return filter;\n    }\n    return null;\n  },\n\n  /**\n   * Tests whether the URL matches any of the known filters\n   * @param {string} location\n   *   URL to be tested\n   * @param {number} typeMask\n   *   bitmask of content / request types to match\n   * @param {string} docDomain\n   *   domain name of the document that loads the URL\n   * @param {boolean} thirdParty\n   *   should be true if the URL is a third-party request\n   * @param {string} sitekey\n   *   public key provided by the document\n   * @param {boolean} specificOnly\n   *   should be true if generic matches should be ignored\n   * @return {?RegExpFilter}\n   *   matching filter or null\n   */\n  matchesAny(location, typeMask, docDomain, thirdParty, sitekey, specificOnly)\n  {\n    let candidates = location.toLowerCase().match(/[a-z0-9%]{3,}/g);\n    if (candidates === null)\n      candidates = [];\n    candidates.push(\"\");\n    for (let i = 0, l = candidates.length; i < l; i++)\n    {\n      let result = this._checkEntryMatch(candidates[i], location, typeMask,\n                                         docDomain, thirdParty, sitekey,\n                                         specificOnly);\n      if (result)\n        return result;\n    }\n\n    return null;\n  }\n};\n\n/**\n * Combines a matcher for blocking and exception rules, automatically sorts\n * rules into two Matcher instances.\n * @constructor\n * @augments Matcher\n */\nfunction CombinedMatcher()\n{\n  this.blacklist = new Matcher();\n  this.whitelist = new Matcher();\n  this.resultCache = new Map();\n}\nexports.CombinedMatcher = CombinedMatcher;\n\n/**\n * Maximal number of matching cache entries to be kept\n * @type {number}\n */\nCombinedMatcher.maxCacheEntries = 1000;\n\nCombinedMatcher.prototype =\n{\n  /**\n   * Matcher for blocking rules.\n   * @type {Matcher}\n   */\n  blacklist: null,\n\n  /**\n   * Matcher for exception rules.\n   * @type {Matcher}\n   */\n  whitelist: null,\n\n  /**\n   * Lookup table of previous matchesAny results\n   * @type {Map.<string,Filter>}\n   */\n  resultCache: null,\n\n  /**\n   * @see Matcher#clear\n   */\n  clear()\n  {\n    this.blacklist.clear();\n    this.whitelist.clear();\n    this.resultCache.clear();\n  },\n\n  /**\n   * @see Matcher#add\n   * @param {Filter} filter\n   */\n  add(filter)\n  {\n    if (filter instanceof WhitelistFilter)\n      this.whitelist.add(filter);\n    else\n      this.blacklist.add(filter);\n\n    this.resultCache.clear();\n  },\n\n  /**\n   * @see Matcher#remove\n   * @param {Filter} filter\n   */\n  remove(filter)\n  {\n    if (filter instanceof WhitelistFilter)\n      this.whitelist.remove(filter);\n    else\n      this.blacklist.remove(filter);\n\n    this.resultCache.clear();\n  },\n\n  /**\n   * @see Matcher#findKeyword\n   * @param {Filter} filter\n   * @return {string} keyword\n   */\n  findKeyword(filter)\n  {\n    if (filter instanceof WhitelistFilter)\n      return this.whitelist.findKeyword(filter);\n    return this.blacklist.findKeyword(filter);\n  },\n\n  /**\n   * @see Matcher#hasFilter\n   * @param {Filter} filter\n   * @return {boolean}\n   */\n  hasFilter(filter)\n  {\n    if (filter instanceof WhitelistFilter)\n      return this.whitelist.hasFilter(filter);\n    return this.blacklist.hasFilter(filter);\n  },\n\n  /**\n   * @see Matcher#getKeywordForFilter\n   * @param {Filter} filter\n   * @return {string} keyword\n   */\n  getKeywordForFilter(filter)\n  {\n    if (filter instanceof WhitelistFilter)\n      return this.whitelist.getKeywordForFilter(filter);\n    return this.blacklist.getKeywordForFilter(filter);\n  },\n\n  /**\n   * Checks whether a particular filter is slow\n   * @param {RegExpFilter} filter\n   * @return {boolean}\n   */\n  isSlowFilter(filter)\n  {\n    let matcher = (\n      filter instanceof WhitelistFilter ? this.whitelist : this.blacklist\n    );\n    if (matcher.hasFilter(filter))\n      return !matcher.getKeywordForFilter(filter);\n    return !matcher.findKeyword(filter);\n  },\n\n  /**\n   * Optimized filter matching testing both whitelist and blacklist matchers\n   * simultaneously. For parameters see Matcher.matchesAny().\n   * @see Matcher#matchesAny\n   * @inheritdoc\n   */\n  matchesAnyInternal(location, typeMask, docDomain, thirdParty, sitekey,\n                     specificOnly)\n  {\n    let candidates = location.toLowerCase().match(/[a-z0-9%]{3,}/g);\n    if (candidates === null)\n      candidates = [];\n    candidates.push(\"\");\n\n    let blacklistHit = null;\n    for (let i = 0, l = candidates.length; i < l; i++)\n    {\n      let substr = candidates[i];\n      let result = this.whitelist._checkEntryMatch(\n        substr, location, typeMask, docDomain, thirdParty, sitekey\n      );\n      if (result)\n        return result;\n      if (blacklistHit === null)\n      {\n        blacklistHit = this.blacklist._checkEntryMatch(\n          substr, location, typeMask, docDomain, thirdParty, sitekey,\n          specificOnly\n        );\n      }\n    }\n    return blacklistHit;\n  },\n\n  /**\n   * @see Matcher#matchesAny\n   * @inheritdoc\n   */\n  matchesAny(location, typeMask, docDomain, thirdParty, sitekey, specificOnly)\n  {\n    let key = location + \" \" + typeMask + \" \" + docDomain + \" \" + thirdParty +\n      \" \" + sitekey + \" \" + specificOnly;\n\n    let result = this.resultCache.get(key);\n    if (typeof result != \"undefined\")\n      return result;\n\n    result = this.matchesAnyInternal(location, typeMask, docDomain,\n                                     thirdParty, sitekey, specificOnly);\n\n    if (this.resultCache.size >= CombinedMatcher.maxCacheEntries)\n      this.resultCache.clear();\n\n    this.resultCache.set(key, result);\n\n    return result;\n  }\n};\n\n/**\n * Shared CombinedMatcher instance that should usually be used.\n * @type {CombinedMatcher}\n */\nexports.defaultMatcher = new CombinedMatcher();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/matcher.js\n// module id = 3\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module url */\n\n\"use strict\";\n\nconst {getDomain} = require(\"./tldjs\");\nconst punycode = require(\"./punycode\");\n\nlet getDecodedHostname =\n/**\n * Gets the IDN-decoded hostname from a URL object.\n *\n * @param {URL} url\n * @return {string}\n * @static\n */\nexports.getDecodedHostname = url =>\n{\n  let {hostname} = url;\n\n  if (hostname.indexOf(\"xn--\") == -1)\n    return hostname;\n\n  return punycode.toUnicode(hostname);\n};\n\n/**\n * Gets the IDN-decoded hostname from the URL of a frame.\n * If the URL don't have host information (like \"about:blank\"\n * and \"data:\" URLs) it falls back to the parent frame.\n *\n * @param {?Frame}  frame\n * @param {URL}    [originUrl]\n * @return {string}\n */\nexports.extractHostFromFrame = (frame, originUrl) =>\n{\n  for (; frame; frame = frame.parent)\n  {\n    let hostname = getDecodedHostname(frame.url);\n    if (hostname)\n      return hostname;\n  }\n\n  return originUrl ? getDecodedHostname(originUrl) : \"\";\n};\n\n/**\n * Converts a URL object into a string. For HTTP(S) URLs\n * the hostname gets IDN-decoded and the hash is stripped.\n *\n * @param {URL} url\n * @return {string}\n */\nexports.stringifyURL = url =>\n{\n  let {protocol, href} = url;\n\n  if (protocol == \"http:\" || protocol == \"https:\")\n  {\n    let {hostname} = url;\n    if (hostname.indexOf(\"xn--\") != -1)\n      href = href.replace(hostname, punycode.toUnicode(hostname));\n\n    let hash = href.indexOf(\"#\");\n    if (hash != -1)\n      href = href.substr(0, hash);\n  }\n\n  return href;\n};\n\nfunction isDomain(hostname)\n{\n  // No hostname or IPv4 address, also considering hexadecimal octets.\n  if (/^((0x[\\da-f]+|\\d+)(\\.|$))*$/i.test(hostname))\n    return false;\n\n  // IPv6 address. Since there can't be colons in domains, we can\n  // just check whether there are any colons to exclude IPv6 addresses.\n  return hostname.indexOf(\":\") == -1;\n}\n\n/**\n * Checks whether the request's origin is different from the document's origin.\n *\n * @param {URL}    url           The request URL\n * @param {string} documentHost  The IDN-decoded hostname of the document\n * @return {Boolean}\n */\nexports.isThirdParty = (url, documentHost) =>\n{\n  let requestHost = getDecodedHostname(url).replace(/\\.+$/, \"\");\n  documentHost = documentHost.replace(/\\.+$/, \"\");\n\n  if (requestHost == documentHost)\n    return false;\n\n  if (!isDomain(requestHost) || !isDomain(documentHost))\n    return true;\n\n  return getDomain(requestHost) != getDomain(documentHost);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/url.js\n// module id = 4\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * @fileOverview FilterStorage class responsible for managing user's\n *               subscriptions and filters.\n */\n\nconst {IO} = require(\"io\");\nconst {Prefs} = require(\"prefs\");\nconst {Filter, ActiveFilter} = require(\"./filterClasses\");\nconst {Subscription, SpecialSubscription,\n       ExternalSubscription} = require(\"./subscriptionClasses\");\nconst {FilterNotifier} = require(\"./filterNotifier\");\n\n/**\n * Version number of the filter storage file format.\n * @type {number}\n */\nlet formatVersion = 5;\n\n/**\n * This class reads user's filters from disk, manages them in memory\n * and writes them back.\n * @class\n */\nlet FilterStorage = exports.FilterStorage =\n{\n  /**\n   * Will be set to true after the initial loadFromDisk() call completes.\n   * @type {boolean}\n   */\n  initialized: false,\n\n  /**\n   * Version number of the patterns.ini format used.\n   * @type {number}\n   */\n  get formatVersion()\n  {\n    return formatVersion;\n  },\n\n  /**\n   * File containing the filter list\n   * @type {string}\n   */\n  get sourceFile()\n  {\n    return \"patterns.ini\";\n  },\n\n  /**\n   * Will be set to true if no patterns.ini file exists.\n   * @type {boolean}\n   */\n  firstRun: false,\n\n  /**\n   * Map of properties listed in the filter storage file before the sections\n   * start. Right now this should be only the format version.\n   */\n  fileProperties: Object.create(null),\n\n  /**\n   * List of filter subscriptions containing all filters\n   * @type {Subscription[]}\n   */\n  subscriptions: [],\n\n  /**\n   * Map of subscriptions already on the list, by their URL/identifier\n   * @type {Object}\n   */\n  knownSubscriptions: Object.create(null),\n\n  /**\n   * Finds the filter group that a filter should be added to by default. Will\n   * return null if this group doesn't exist yet.\n   * @param {Filter} filter\n   * @return {?SpecialSubscription}\n   */\n  getGroupForFilter(filter)\n  {\n    let generalSubscription = null;\n    for (let subscription of FilterStorage.subscriptions)\n    {\n      if (subscription instanceof SpecialSubscription && !subscription.disabled)\n      {\n        // Always prefer specialized subscriptions\n        if (subscription.isDefaultFor(filter))\n          return subscription;\n\n        // If this is a general subscription - store it as fallback\n        if (!generalSubscription &&\n            (!subscription.defaults || !subscription.defaults.length))\n        {\n          generalSubscription = subscription;\n        }\n      }\n    }\n    return generalSubscription;\n  },\n\n  /**\n   * Adds a filter subscription to the list\n   * @param {Subscription} subscription filter subscription to be added\n   */\n  addSubscription(subscription)\n  {\n    if (subscription.url in FilterStorage.knownSubscriptions)\n      return;\n\n    FilterStorage.subscriptions.push(subscription);\n    FilterStorage.knownSubscriptions[subscription.url] = subscription;\n    addSubscriptionFilters(subscription);\n\n    FilterNotifier.triggerListeners(\"subscription.added\", subscription);\n  },\n\n  /**\n   * Removes a filter subscription from the list\n   * @param {Subscription} subscription filter subscription to be removed\n   */\n  removeSubscription(subscription)\n  {\n    for (let i = 0; i < FilterStorage.subscriptions.length; i++)\n    {\n      if (FilterStorage.subscriptions[i].url == subscription.url)\n      {\n        removeSubscriptionFilters(subscription);\n\n        FilterStorage.subscriptions.splice(i--, 1);\n        delete FilterStorage.knownSubscriptions[subscription.url];\n        FilterNotifier.triggerListeners(\"subscription.removed\", subscription);\n        return;\n      }\n    }\n  },\n\n  /**\n   * Moves a subscription in the list to a new position.\n   * @param {Subscription} subscription filter subscription to be moved\n   * @param {Subscription} [insertBefore] filter subscription to insert before\n   *        (if omitted the subscription will be put at the end of the list)\n   */\n  moveSubscription(subscription, insertBefore)\n  {\n    let currentPos = FilterStorage.subscriptions.indexOf(subscription);\n    if (currentPos < 0)\n      return;\n\n    let newPos = -1;\n    if (insertBefore)\n      newPos = FilterStorage.subscriptions.indexOf(insertBefore);\n\n    if (newPos < 0)\n      newPos = FilterStorage.subscriptions.length;\n\n    if (currentPos < newPos)\n      newPos--;\n    if (currentPos == newPos)\n      return;\n\n    FilterStorage.subscriptions.splice(currentPos, 1);\n    FilterStorage.subscriptions.splice(newPos, 0, subscription);\n    FilterNotifier.triggerListeners(\"subscription.moved\", subscription);\n  },\n\n  /**\n   * Replaces the list of filters in a subscription by a new list\n   * @param {Subscription} subscription filter subscription to be updated\n   * @param {Filter[]} filters new filter list\n   */\n  updateSubscriptionFilters(subscription, filters)\n  {\n    removeSubscriptionFilters(subscription);\n    subscription.oldFilters = subscription.filters;\n    subscription.filters = filters;\n    addSubscriptionFilters(subscription);\n    FilterNotifier.triggerListeners(\"subscription.updated\", subscription);\n    delete subscription.oldFilters;\n  },\n\n  /**\n   * Adds a user-defined filter to the list\n   * @param {Filter} filter\n   * @param {SpecialSubscription} [subscription]\n   *   particular group that the filter should be added to\n   * @param {number} [position]\n   *   position within the subscription at which the filter should be added\n   */\n  addFilter(filter, subscription, position)\n  {\n    if (!subscription)\n    {\n      if (filter.subscriptions.some(s => s instanceof SpecialSubscription &&\n                                         !s.disabled))\n      {\n        return;   // No need to add\n      }\n      subscription = FilterStorage.getGroupForFilter(filter);\n    }\n    if (!subscription)\n    {\n      // No group for this filter exists, create one\n      subscription = SpecialSubscription.createForFilter(filter);\n      this.addSubscription(subscription);\n      return;\n    }\n\n    if (typeof position == \"undefined\")\n      position = subscription.filters.length;\n\n    if (filter.subscriptions.indexOf(subscription) < 0)\n      filter.subscriptions.push(subscription);\n    subscription.filters.splice(position, 0, filter);\n    FilterNotifier.triggerListeners(\"filter.added\", filter, subscription,\n                                    position);\n  },\n\n  /**\n   * Removes a user-defined filter from the list\n   * @param {Filter} filter\n   * @param {SpecialSubscription} [subscription] a particular filter group that\n   *      the filter should be removed from (if ommited will be removed from all\n   *      subscriptions)\n   * @param {number} [position]  position inside the filter group at which the\n   *      filter should be removed (if ommited all instances will be removed)\n   */\n  removeFilter(filter, subscription, position)\n  {\n    let subscriptions = (\n      subscription ? [subscription] : filter.subscriptions.slice()\n    );\n    for (let i = 0; i < subscriptions.length; i++)\n    {\n      let currentSubscription = subscriptions[i];\n      if (currentSubscription instanceof SpecialSubscription)\n      {\n        let positions = [];\n        if (typeof position == \"undefined\")\n        {\n          let index = -1;\n          do\n          {\n            index = currentSubscription.filters.indexOf(filter, index + 1);\n            if (index >= 0)\n              positions.push(index);\n          } while (index >= 0);\n        }\n        else\n          positions.push(position);\n\n        for (let j = positions.length - 1; j >= 0; j--)\n        {\n          let currentPosition = positions[j];\n          if (currentSubscription.filters[currentPosition] == filter)\n          {\n            currentSubscription.filters.splice(currentPosition, 1);\n            if (currentSubscription.filters.indexOf(filter) < 0)\n            {\n              let index = filter.subscriptions.indexOf(currentSubscription);\n              if (index >= 0)\n                filter.subscriptions.splice(index, 1);\n            }\n            FilterNotifier.triggerListeners(\n              \"filter.removed\", filter, currentSubscription, currentPosition\n            );\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Moves a user-defined filter to a new position\n   * @param {Filter} filter\n   * @param {SpecialSubscription} subscription filter group where the filter is\n   *                                           located\n   * @param {number} oldPosition current position of the filter\n   * @param {number} newPosition new position of the filter\n   */\n  moveFilter(filter, subscription, oldPosition, newPosition)\n  {\n    if (!(subscription instanceof SpecialSubscription) ||\n        subscription.filters[oldPosition] != filter)\n    {\n      return;\n    }\n\n    newPosition = Math.min(Math.max(newPosition, 0),\n                           subscription.filters.length - 1);\n    if (oldPosition == newPosition)\n      return;\n\n    subscription.filters.splice(oldPosition, 1);\n    subscription.filters.splice(newPosition, 0, filter);\n    FilterNotifier.triggerListeners(\"filter.moved\", filter, subscription,\n                                    oldPosition, newPosition);\n  },\n\n  /**\n   * Increases the hit count for a filter by one\n   * @param {Filter} filter\n   */\n  increaseHitCount(filter)\n  {\n    if (!Prefs.savestats || !(filter instanceof ActiveFilter))\n      return;\n\n    filter.hitCount++;\n    filter.lastHit = Date.now();\n  },\n\n  /**\n   * Resets hit count for some filters\n   * @param {Filter[]} filters  filters to be reset, if null all filters will\n   *                            be reset\n   */\n  resetHitCounts(filters)\n  {\n    if (!filters)\n      filters = Filter.knownFilters.values();\n    for (let filter of filters)\n    {\n      filter.hitCount = 0;\n      filter.lastHit = 0;\n    }\n  },\n\n  /**\n   * @callback TextSink\n   * @param {string?} line\n   */\n\n  /**\n   * Allows importing previously serialized filter data.\n   * @param {boolean} silent\n   *    If true, no \"load\" notification will be sent out.\n   * @return {TextSink}\n   *    Function to be called for each line of data. Calling it with null as\n   *    parameter finalizes the import and replaces existing data. No changes\n   *    will be applied before finalization, so import can be \"aborted\" by\n   *    forgetting this callback.\n   */\n  importData(silent)\n  {\n    let parser = new INIParser();\n    return line =>\n    {\n      parser.process(line);\n      if (line === null)\n      {\n        let knownSubscriptions = Object.create(null);\n        for (let subscription of parser.subscriptions)\n          knownSubscriptions[subscription.url] = subscription;\n\n        this.fileProperties = parser.fileProperties;\n        this.subscriptions = parser.subscriptions;\n        this.knownSubscriptions = knownSubscriptions;\n        Filter.knownFilters = parser.knownFilters;\n        Subscription.knownSubscriptions = parser.knownSubscriptions;\n\n        if (!silent)\n          FilterNotifier.triggerListeners(\"load\");\n      }\n    };\n  },\n\n  /**\n   * Loads all subscriptions from the disk.\n   * @return {Promise} promise resolved or rejected when loading is complete\n   */\n  loadFromDisk()\n  {\n    let tryBackup = backupIndex =>\n    {\n      return this.restoreBackup(backupIndex, true).then(() =>\n      {\n        if (this.subscriptions.length == 0)\n          return tryBackup(backupIndex + 1);\n      }).catch(error =>\n      {\n        // Give up\n      });\n    };\n\n    return IO.statFile(this.sourceFile).then(statData =>\n    {\n      if (!statData.exists)\n      {\n        this.firstRun = true;\n        return;\n      }\n\n      let parser = this.importData(true);\n      return IO.readFromFile(this.sourceFile, parser).then(() =>\n      {\n        parser(null);\n        if (this.subscriptions.length == 0)\n        {\n          // No filter subscriptions in the file, this isn't right.\n          throw new Error(\"No data in the file\");\n        }\n      });\n    }).catch(error =>\n    {\n      Cu.reportError(error);\n      return tryBackup(1);\n    }).then(() =>\n    {\n      this.initialized = true;\n      FilterNotifier.triggerListeners(\"load\");\n    });\n  },\n\n  /**\n   * Constructs the file name for a patterns.ini backup.\n   * @param {number} backupIndex\n   *    number of the backup file (1 being the most recent)\n   * @return {string} backup file name\n   */\n  getBackupName(backupIndex)\n  {\n    let [name, extension] = this.sourceFile.split(\".\", 2);\n    return (name + \"-backup\" + backupIndex + \".\" + extension);\n  },\n\n  /**\n   * Restores an automatically created backup.\n   * @param {number} backupIndex\n   *    number of the backup to restore (1 being the most recent)\n   * @param {boolean} silent\n   *    If true, no \"load\" notification will be sent out.\n   * @return {Promise} promise resolved or rejected when restoring is complete\n   */\n  restoreBackup(backupIndex, silent)\n  {\n    let backupFile = this.getBackupName(backupIndex);\n    let parser = this.importData(silent);\n    return IO.readFromFile(backupFile, parser).then(() =>\n    {\n      parser(null);\n      return this.saveToDisk();\n    });\n  },\n\n  /**\n   * Generator serializing filter data and yielding it line by line.\n   */\n  *exportData()\n  {\n    // Do not persist external subscriptions\n    let subscriptions = this.subscriptions.filter(\n      s => !(s instanceof ExternalSubscription)\n    );\n\n    yield \"# Adblock Plus preferences\";\n    yield \"version=\" + formatVersion;\n\n    let saved = new Set();\n    let buf = [];\n\n    // Save subscriptions\n    for (let subscription of subscriptions)\n    {\n      yield \"\";\n\n      subscription.serialize(buf);\n      if (subscription.filters.length)\n      {\n        buf.push(\"\", \"[Subscription filters]\");\n        subscription.serializeFilters(buf);\n      }\n      for (let line of buf)\n        yield line;\n      buf.splice(0);\n    }\n\n    // Save filter data\n    for (let subscription of subscriptions)\n    {\n      for (let filter of subscription.filters)\n      {\n        if (!saved.has(filter.text))\n        {\n          filter.serialize(buf);\n          saved.add(filter.text);\n          for (let line of buf)\n            yield line;\n          buf.splice(0);\n        }\n      }\n    }\n  },\n\n  /**\n   * Will be set to true if saveToDisk() is running (reentrance protection).\n   * @type {boolean}\n   */\n  _saving: false,\n\n  /**\n   * Will be set to true if a saveToDisk() call arrives while saveToDisk() is\n   * already running (delayed execution).\n   * @type {boolean}\n   */\n  _needsSave: false,\n\n  /**\n   * Saves all subscriptions back to disk\n   * @return {Promise} promise resolved or rejected when saving is complete\n   */\n  saveToDisk()\n  {\n    if (this._saving)\n    {\n      this._needsSave = true;\n      return;\n    }\n\n    this._saving = true;\n\n    return Promise.resolve().then(() =>\n    {\n      // First check whether we need to create a backup\n      if (Prefs.patternsbackups <= 0)\n        return false;\n\n      return IO.statFile(this.sourceFile).then(statData =>\n      {\n        if (!statData.exists)\n          return false;\n\n        return IO.statFile(this.getBackupName(1)).then(backupStatData =>\n        {\n          if (backupStatData.exists &&\n              (Date.now() - backupStatData.lastModified) / 3600000 <\n                Prefs.patternsbackupinterval)\n          {\n            return false;\n          }\n          return true;\n        });\n      });\n    }).then(backupRequired =>\n    {\n      if (!backupRequired)\n        return;\n\n      let ignoreErrors = error =>\n      {\n        // Expected error, backup file doesn't exist.\n      };\n\n      let renameBackup = index =>\n      {\n        if (index > 0)\n        {\n          return IO.renameFile(this.getBackupName(index),\n                               this.getBackupName(index + 1))\n                   .catch(ignoreErrors)\n                   .then(() => renameBackup(index - 1));\n        }\n\n        return IO.renameFile(this.sourceFile, this.getBackupName(1))\n                 .catch(ignoreErrors);\n      };\n\n      // Rename existing files\n      return renameBackup(Prefs.patternsbackups - 1);\n    }).catch(error =>\n    {\n      // Errors during backup creation shouldn't prevent writing filters.\n      Cu.reportError(error);\n    }).then(() =>\n    {\n      return IO.writeToFile(this.sourceFile, this.exportData());\n    }).then(() =>\n    {\n      FilterNotifier.triggerListeners(\"save\");\n    }).catch(error =>\n    {\n      // If saving failed, report error but continue - we still have to process\n      // flags.\n      Cu.reportError(error);\n    }).then(() =>\n    {\n      this._saving = false;\n      if (this._needsSave)\n      {\n        this._needsSave = false;\n        this.saveToDisk();\n      }\n    });\n  },\n\n  /**\n   * @typedef FileInfo\n   * @type {object}\n   * @property {number} index\n   * @property {number} lastModified\n   */\n\n  /**\n   * Returns a promise resolving in a list of existing backup files.\n   * @return {Promise.<FileInfo[]>}\n   */\n  getBackupFiles()\n  {\n    let backups = [];\n\n    let checkBackupFile = index =>\n    {\n      return IO.statFile(this.getBackupName(index)).then(statData =>\n      {\n        if (!statData.exists)\n          return backups;\n\n        backups.push({\n          index,\n          lastModified: statData.lastModified\n        });\n        return checkBackupFile(index + 1);\n      }).catch(error =>\n      {\n        // Something went wrong, return whatever data we got so far.\n        Cu.reportError(error);\n        return backups;\n      });\n    };\n\n    return checkBackupFile(1);\n  }\n};\n\n/**\n * Joins subscription's filters to the subscription without any notifications.\n * @param {Subscription} subscription\n *   filter subscription that should be connected to its filters\n */\nfunction addSubscriptionFilters(subscription)\n{\n  if (!(subscription.url in FilterStorage.knownSubscriptions))\n    return;\n\n  for (let filter of subscription.filters)\n    filter.subscriptions.push(subscription);\n}\n\n/**\n * Removes subscription's filters from the subscription without any\n * notifications.\n * @param {Subscription} subscription filter subscription to be removed\n */\nfunction removeSubscriptionFilters(subscription)\n{\n  if (!(subscription.url in FilterStorage.knownSubscriptions))\n    return;\n\n  for (let filter of subscription.filters)\n  {\n    let i = filter.subscriptions.indexOf(subscription);\n    if (i >= 0)\n      filter.subscriptions.splice(i, 1);\n  }\n}\n\n/**\n * Listener returned by FilterStorage.importData(), parses filter data.\n * @constructor\n */\nfunction INIParser()\n{\n  this.fileProperties = this.curObj = {};\n  this.subscriptions = [];\n  this.knownFilters = new Map();\n  this.knownSubscriptions = Object.create(null);\n}\nINIParser.prototype =\n{\n  linesProcessed: 0,\n  subscriptions: null,\n  knownFilters: null,\n  knownSubscriptions: null,\n  wantObj: true,\n  fileProperties: null,\n  curObj: null,\n  curSection: null,\n\n  process(val)\n  {\n    let origKnownFilters = Filter.knownFilters;\n    Filter.knownFilters = this.knownFilters;\n    let origKnownSubscriptions = Subscription.knownSubscriptions;\n    Subscription.knownSubscriptions = this.knownSubscriptions;\n    let match;\n    try\n    {\n      if (this.wantObj === true && (match = /^(\\w+)=(.*)$/.exec(val)))\n        this.curObj[match[1]] = match[2];\n      else if (val === null || (match = /^\\s*\\[(.+)\\]\\s*$/.exec(val)))\n      {\n        if (this.curObj)\n        {\n          // Process current object before going to next section\n          switch (this.curSection)\n          {\n            case \"filter\":\n              if (\"text\" in this.curObj)\n                Filter.fromObject(this.curObj);\n              break;\n            case \"subscription\": {\n              let subscription = Subscription.fromObject(this.curObj);\n              if (subscription)\n                this.subscriptions.push(subscription);\n              break;\n            }\n            case \"subscription filters\":\n              if (this.subscriptions.length)\n              {\n                let subscription = this.subscriptions[\n                  this.subscriptions.length - 1\n                ];\n                for (let text of this.curObj)\n                {\n                  let filter = Filter.fromText(text);\n                  subscription.filters.push(filter);\n                  filter.subscriptions.push(subscription);\n                }\n              }\n              break;\n          }\n        }\n\n        if (val === null)\n          return;\n\n        this.curSection = match[1].toLowerCase();\n        switch (this.curSection)\n        {\n          case \"filter\":\n          case \"subscription\":\n            this.wantObj = true;\n            this.curObj = {};\n            break;\n          case \"subscription filters\":\n            this.wantObj = false;\n            this.curObj = [];\n            break;\n          default:\n            this.wantObj = undefined;\n            this.curObj = null;\n        }\n      }\n      else if (this.wantObj === false && val)\n        this.curObj.push(val.replace(/\\\\\\[/g, \"[\"));\n    }\n    finally\n    {\n      Filter.knownFilters = origKnownFilters;\n      Subscription.knownSubscriptions = origKnownSubscriptions;\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/filterStorage.js\n// module id = 5\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * Registers and emits named events.\n *\n * @constructor\n */\nexports.EventEmitter = function()\n{\n  this._listeners = new Map();\n};\n\nexports.EventEmitter.prototype = {\n  /**\n   * Adds a listener for the specified event name.\n   *\n   * @param {string}   name\n   * @param {function} listener\n   */\n  on(name, listener)\n  {\n    let listeners = this._listeners.get(name);\n    if (listeners)\n      listeners.push(listener);\n    else\n      this._listeners.set(name, [listener]);\n  },\n\n  /**\n   * Removes a listener for the specified event name.\n   *\n   * @param {string}   name\n   * @param {function} listener\n   */\n  off(name, listener)\n  {\n    let listeners = this._listeners.get(name);\n    if (listeners)\n    {\n      let idx = listeners.indexOf(listener);\n      if (idx != -1)\n        listeners.splice(idx, 1);\n    }\n  },\n\n  /**\n   * Adds a one time listener and returns a promise that\n   * is resolved the next time the specified event is emitted.\n   * @param {string} name\n   * @return {Promise}\n   */\n  once(name)\n  {\n    return new Promise(resolve =>\n    {\n      let listener = () =>\n      {\n        this.off(name, listener);\n        resolve();\n      };\n\n      this.on(name, listener);\n    });\n  },\n\n  /**\n   * Returns a copy of the array of listeners for the specified event.\n   *\n   * @param {string} name\n   * @return {function[]}\n   */\n  listeners(name)\n  {\n    let listeners = this._listeners.get(name);\n    return listeners ? listeners.slice() : [];\n  },\n\n  /**\n   * Calls all previously added listeners for the given event name.\n   *\n   * @param {string} name\n   * @param {...*}   [arg]\n   */\n  emit(name, ...args)\n  {\n    let listeners = this.listeners(name);\n    for (let listener of listeners)\n      listener(...args);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/events.js\n// module id = 6\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nfunction desc(properties)\n{\n  let descriptor = {};\n  let keys = Object.keys(properties);\n\n  for (let key of keys)\n    descriptor[key] = Object.getOwnPropertyDescriptor(properties, key);\n\n  return descriptor;\n}\nexports.desc = desc;\n\nfunction extend(cls, properties)\n{\n  return Object.create(cls.prototype, desc(properties));\n}\nexports.extend = extend;\n\nfunction findIndex(iterable, callback, thisArg)\n{\n  let index = 0;\n  for (let item of iterable)\n  {\n    if (callback.call(thisArg, item))\n      return index;\n\n    index++;\n  }\n\n  return -1;\n}\nexports.findIndex = findIndex;\n\nfunction indexOf(iterable, searchElement)\n{\n  return findIndex(iterable, item => item === searchElement);\n}\nexports.indexOf = indexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/coreUtils.js\n// module id = 7\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * @fileOverview Definition of Subscription class and its subclasses.\n */\n\nconst {ActiveFilter, BlockingFilter,\n       WhitelistFilter, ElemHideBase} = require(\"./filterClasses\");\nconst {FilterNotifier} = require(\"./filterNotifier\");\nconst {desc, extend} = require(\"./coreUtils\");\n\n/**\n * Abstract base class for filter subscriptions\n *\n * @param {string} url    download location of the subscription\n * @param {string} [title]  title of the filter subscription\n * @constructor\n */\nfunction Subscription(url, title)\n{\n  this.url = url;\n  this.filters = [];\n  if (title)\n    this._title = title;\n  Subscription.knownSubscriptions[url] = this;\n}\nexports.Subscription = Subscription;\n\nSubscription.prototype =\n{\n  /**\n   * Download location of the subscription\n   * @type {string}\n   */\n  url: null,\n\n  /**\n   * Filters contained in the filter subscription\n   * @type {Filter[]}\n   */\n  filters: null,\n\n  _title: null,\n  _fixedTitle: false,\n  _disabled: false,\n\n  /**\n   * Title of the filter subscription\n   * @type {string}\n   */\n  get title()\n  {\n    return this._title;\n  },\n  set title(value)\n  {\n    if (value != this._title)\n    {\n      let oldValue = this._title;\n      this._title = value;\n      FilterNotifier.triggerListeners(\"subscription.title\",\n                                      this, value, oldValue);\n    }\n    return this._title;\n  },\n\n  /**\n   * Determines whether the title should be editable\n   * @type {boolean}\n   */\n  get fixedTitle()\n  {\n    return this._fixedTitle;\n  },\n  set fixedTitle(value)\n  {\n    if (value != this._fixedTitle)\n    {\n      let oldValue = this._fixedTitle;\n      this._fixedTitle = value;\n      FilterNotifier.triggerListeners(\"subscription.fixedTitle\",\n                                      this, value, oldValue);\n    }\n    return this._fixedTitle;\n  },\n\n  /**\n   * Defines whether the filters in the subscription should be disabled\n   * @type {boolean}\n   */\n  get disabled()\n  {\n    return this._disabled;\n  },\n  set disabled(value)\n  {\n    if (value != this._disabled)\n    {\n      let oldValue = this._disabled;\n      this._disabled = value;\n      FilterNotifier.triggerListeners(\"subscription.disabled\",\n                                      this, value, oldValue);\n    }\n    return this._disabled;\n  },\n\n  /**\n   * Serializes the subscription to an array of strings for writing\n   * out on the disk.\n   * @param {string[]} buffer  buffer to push the serialization results into\n   */\n  serialize(buffer)\n  {\n    buffer.push(\"[Subscription]\");\n    buffer.push(\"url=\" + this.url);\n    if (this._title)\n      buffer.push(\"title=\" + this._title);\n    if (this._fixedTitle)\n      buffer.push(\"fixedTitle=true\");\n    if (this._disabled)\n      buffer.push(\"disabled=true\");\n  },\n\n  serializeFilters(buffer)\n  {\n    for (let filter of this.filters)\n      buffer.push(filter.text.replace(/\\[/g, \"\\\\[\"));\n  },\n\n  toString()\n  {\n    let buffer = [];\n    this.serialize(buffer);\n    return buffer.join(\"\\n\");\n  }\n};\n\n/**\n * Cache for known filter subscriptions, maps URL to subscription objects.\n * @type {Object}\n */\nSubscription.knownSubscriptions = Object.create(null);\n\n/**\n * Returns a subscription from its URL, creates a new one if necessary.\n * @param {string} url\n *   URL of the subscription\n * @return {Subscription}\n *   subscription or null if the subscription couldn't be created\n */\nSubscription.fromURL = function(url)\n{\n  if (url in Subscription.knownSubscriptions)\n    return Subscription.knownSubscriptions[url];\n\n  if (url[0] != \"~\")\n    return new DownloadableSubscription(url, null);\n  return new SpecialSubscription(url);\n};\n\n/**\n * Deserializes a subscription\n *\n * @param {Object}  obj\n *   map of serialized properties and their values\n * @return {Subscription}\n *   subscription or null if the subscription couldn't be created\n */\nSubscription.fromObject = function(obj)\n{\n  let result;\n  if (obj.url[0] != \"~\")\n  {\n    // URL is valid - this is a downloadable subscription\n    result = new DownloadableSubscription(obj.url, obj.title);\n    if (\"downloadStatus\" in obj)\n      result._downloadStatus = obj.downloadStatus;\n    if (\"lastSuccess\" in obj)\n      result.lastSuccess = parseInt(obj.lastSuccess, 10) || 0;\n    if (\"lastCheck\" in obj)\n      result._lastCheck = parseInt(obj.lastCheck, 10) || 0;\n    if (\"expires\" in obj)\n      result.expires = parseInt(obj.expires, 10) || 0;\n    if (\"softExpiration\" in obj)\n      result.softExpiration = parseInt(obj.softExpiration, 10) || 0;\n    if (\"errors\" in obj)\n      result._errors = parseInt(obj.errors, 10) || 0;\n    if (\"version\" in obj)\n      result.version = parseInt(obj.version, 10) || 0;\n    if (\"requiredVersion\" in obj)\n      result.requiredVersion = obj.requiredVersion;\n    if (\"homepage\" in obj)\n      result._homepage = obj.homepage;\n    if (\"lastDownload\" in obj)\n      result._lastDownload = parseInt(obj.lastDownload, 10) || 0;\n    if (\"downloadCount\" in obj)\n      result.downloadCount = parseInt(obj.downloadCount, 10) || 0;\n  }\n  else\n  {\n    result = new SpecialSubscription(obj.url, obj.title);\n    if (\"defaults\" in obj)\n      result.defaults = obj.defaults.split(\" \");\n  }\n  if (\"fixedTitle\" in obj)\n    result._fixedTitle = (obj.fixedTitle == \"true\");\n  if (\"disabled\" in obj)\n    result._disabled = (obj.disabled == \"true\");\n\n  return result;\n};\n\n/**\n * Class for special filter subscriptions (user's filters)\n * @param {string} url see Subscription()\n * @param {string} [title]  see Subscription()\n * @constructor\n * @augments Subscription\n */\nfunction SpecialSubscription(url, title)\n{\n  Subscription.call(this, url, title);\n}\nexports.SpecialSubscription = SpecialSubscription;\n\nSpecialSubscription.prototype = extend(Subscription, {\n  /**\n   * Filter types that should be added to this subscription by default\n   * (entries should correspond to keys in SpecialSubscription.defaultsMap).\n   * @type {string[]}\n   */\n  defaults: null,\n\n  /**\n   * Tests whether a filter should be added to this group by default\n   * @param {Filter} filter filter to be tested\n   * @return {boolean}\n   */\n  isDefaultFor(filter)\n  {\n    if (this.defaults && this.defaults.length)\n    {\n      for (let type of this.defaults)\n      {\n        if (filter instanceof SpecialSubscription.defaultsMap[type])\n          return true;\n        if (!(filter instanceof ActiveFilter) && type == \"blacklist\")\n          return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * See Subscription.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer)\n  {\n    Subscription.prototype.serialize.call(this, buffer);\n    if (this.defaults && this.defaults.length)\n    {\n      buffer.push(\"defaults=\" +\n        this.defaults.filter(\n          type => type in SpecialSubscription.defaultsMap\n        ).join(\" \")\n      );\n    }\n    if (this._lastDownload)\n      buffer.push(\"lastDownload=\" + this._lastDownload);\n  }\n});\n\nSpecialSubscription.defaultsMap = Object.create(null, desc({\n  whitelist: WhitelistFilter,\n  blocking: BlockingFilter,\n  elemhide: ElemHideBase\n}));\n\n/**\n * Creates a new user-defined filter group.\n * @param {string} [title]  title of the new filter group\n * @return {SpecialSubscription}\n */\nSpecialSubscription.create = function(title)\n{\n  let url;\n  do\n  {\n    url = \"~user~\" + Math.round(Math.random() * 1000000);\n  } while (url in Subscription.knownSubscriptions);\n  return new SpecialSubscription(url, title);\n};\n\n/**\n * Creates a new user-defined filter group and adds the given filter to it.\n * This group will act as the default group for this filter type.\n * @param {Filter} filter\n * @return {SpecialSubscription}\n */\nSpecialSubscription.createForFilter = function(filter)\n{\n  let subscription = SpecialSubscription.create();\n  subscription.filters.push(filter);\n  for (let type in SpecialSubscription.defaultsMap)\n  {\n    if (filter instanceof SpecialSubscription.defaultsMap[type])\n      subscription.defaults = [type];\n  }\n  if (!subscription.defaults)\n    subscription.defaults = [\"blocking\"];\n  return subscription;\n};\n\n/**\n * Abstract base class for regular filter subscriptions (both\n * internally and externally updated)\n * @param {string} url    see Subscription()\n * @param {string} [title]  see Subscription()\n * @constructor\n * @augments Subscription\n */\nfunction RegularSubscription(url, title)\n{\n  Subscription.call(this, url, title || url);\n}\nexports.RegularSubscription = RegularSubscription;\n\nRegularSubscription.prototype = extend(Subscription, {\n  _homepage: null,\n  _lastDownload: 0,\n\n  /**\n   * Filter subscription homepage if known\n   * @type {string}\n   */\n  get homepage()\n  {\n    return this._homepage;\n  },\n  set homepage(value)\n  {\n    if (value != this._homepage)\n    {\n      let oldValue = this._homepage;\n      this._homepage = value;\n      FilterNotifier.triggerListeners(\"subscription.homepage\",\n                                      this, value, oldValue);\n    }\n    return this._homepage;\n  },\n\n  /**\n   * Time of the last subscription download (in seconds since the\n   * beginning of the epoch)\n   * @type {number}\n   */\n  get lastDownload()\n  {\n    return this._lastDownload;\n  },\n  set lastDownload(value)\n  {\n    if (value != this._lastDownload)\n    {\n      let oldValue = this._lastDownload;\n      this._lastDownload = value;\n      FilterNotifier.triggerListeners(\"subscription.lastDownload\",\n                                      this, value, oldValue);\n    }\n    return this._lastDownload;\n  },\n\n  /**\n   * See Subscription.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer)\n  {\n    Subscription.prototype.serialize.call(this, buffer);\n    if (this._homepage)\n      buffer.push(\"homepage=\" + this._homepage);\n    if (this._lastDownload)\n      buffer.push(\"lastDownload=\" + this._lastDownload);\n  }\n});\n\n/**\n * Class for filter subscriptions updated externally (by other extension)\n * @param {string} url    see Subscription()\n * @param {string} [title]  see Subscription()\n * @constructor\n * @augments RegularSubscription\n */\nfunction ExternalSubscription(url, title)\n{\n  RegularSubscription.call(this, url, title);\n}\nexports.ExternalSubscription = ExternalSubscription;\n\nExternalSubscription.prototype = extend(RegularSubscription, {\n  /**\n   * See Subscription.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer)\n  {\n    throw new Error(\n      \"Unexpected call, external subscriptions should not be serialized\"\n    );\n  }\n});\n\n/**\n * Class for filter subscriptions updated externally (by other extension)\n * @param {string} url  see Subscription()\n * @param {string} [title]  see Subscription()\n * @constructor\n * @augments RegularSubscription\n */\nfunction DownloadableSubscription(url, title)\n{\n  RegularSubscription.call(this, url, title);\n}\nexports.DownloadableSubscription = DownloadableSubscription;\n\nDownloadableSubscription.prototype = extend(RegularSubscription, {\n  _downloadStatus: null,\n  _lastCheck: 0,\n  _errors: 0,\n\n  /**\n   * Status of the last download (ID of a string)\n   * @type {string}\n   */\n  get downloadStatus()\n  {\n    return this._downloadStatus;\n  },\n  set downloadStatus(value)\n  {\n    let oldValue = this._downloadStatus;\n    this._downloadStatus = value;\n    FilterNotifier.triggerListeners(\"subscription.downloadStatus\",\n                                    this, value, oldValue);\n    return this._downloadStatus;\n  },\n\n  /**\n   * Time of the last successful download (in seconds since the beginning of the\n   * epoch).\n   */\n  lastSuccess: 0,\n\n  /**\n   * Time when the subscription was considered for an update last time\n   * (in seconds since the beginning of the epoch). This will be used\n   * to increase softExpiration if the user doesn't use Adblock Plus\n   * for some time.\n   * @type {number}\n   */\n  get lastCheck()\n  {\n    return this._lastCheck;\n  },\n  set lastCheck(value)\n  {\n    if (value != this._lastCheck)\n    {\n      let oldValue = this._lastCheck;\n      this._lastCheck = value;\n      FilterNotifier.triggerListeners(\"subscription.lastCheck\",\n                                      this, value, oldValue);\n    }\n    return this._lastCheck;\n  },\n\n  /**\n   * Hard expiration time of the filter subscription (in seconds since\n   * the beginning of the epoch)\n   * @type {number}\n   */\n  expires: 0,\n\n  /**\n   * Soft expiration time of the filter subscription (in seconds since\n   * the beginning of the epoch)\n   * @type {number}\n   */\n  softExpiration: 0,\n\n  /**\n   * Number of download failures since last success\n   * @type {number}\n   */\n  get errors()\n  {\n    return this._errors;\n  },\n  set errors(value)\n  {\n    if (value != this._errors)\n    {\n      let oldValue = this._errors;\n      this._errors = value;\n      FilterNotifier.triggerListeners(\"subscription.errors\", this,\n                                      value, oldValue);\n    }\n    return this._errors;\n  },\n\n  /**\n   * Version of the subscription data retrieved on last successful download\n   * @type {number}\n   */\n  version: 0,\n\n  /**\n   * Minimal Adblock Plus version required for this subscription\n   * @type {string}\n   */\n  requiredVersion: null,\n\n  /**\n   * Number indicating how often the object was downloaded.\n   * @type {number}\n   */\n  downloadCount: 0,\n\n  /**\n   * See Subscription.serialize()\n   * @inheritdoc\n   */\n  serialize(buffer)\n  {\n    RegularSubscription.prototype.serialize.call(this, buffer);\n    if (this.downloadStatus)\n      buffer.push(\"downloadStatus=\" + this.downloadStatus);\n    if (this.lastSuccess)\n      buffer.push(\"lastSuccess=\" + this.lastSuccess);\n    if (this.lastCheck)\n      buffer.push(\"lastCheck=\" + this.lastCheck);\n    if (this.expires)\n      buffer.push(\"expires=\" + this.expires);\n    if (this.softExpiration)\n      buffer.push(\"softExpiration=\" + this.softExpiration);\n    if (this.errors)\n      buffer.push(\"errors=\" + this.errors);\n    if (this.version)\n      buffer.push(\"version=\" + this.version);\n    if (this.requiredVersion)\n      buffer.push(\"requiredVersion=\" + this.requiredVersion);\n    if (this.downloadCount)\n      buffer.push(\"downloadCount=\" + this.downloadCount);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/subscriptionClasses.js\n// module id = 8\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module messaging */\n\n\"use strict\";\n\nconst {EventEmitter} = require(\"../adblockpluscore/lib/events\");\n\n/**\n * Communication port wrapping ext.onMessage to receive messages.\n *\n * @constructor\n */\nfunction Port()\n{\n  this._eventEmitter = new EventEmitter();\n  this._onMessage = this._onMessage.bind(this);\n  ext.onMessage.addListener(this._onMessage);\n}\n\nPort.prototype = {\n  _onMessage(message, sender, sendResponse)\n  {\n    let async = false;\n    let callbacks = this._eventEmitter.listeners(message.type);\n\n    for (let callback of callbacks)\n    {\n      let response = callback(message, sender);\n\n      if (response && typeof response.then == \"function\")\n      {\n        response.then(\n          sendResponse,\n          reason =>\n          {\n            console.error(reason);\n            sendResponse(undefined);\n          }\n        );\n        async = true;\n      }\n      else if (typeof response != \"undefined\")\n      {\n        sendResponse(response);\n      }\n    }\n\n    return async;\n  },\n\n  /**\n   * Function to be called when a particular message is received.\n   *\n   * @callback Port~messageCallback\n   * @param {object} message\n   * @param {object} sender\n   * @return The callback can return undefined (no response),\n   *         a value (response to be sent to sender immediately)\n   *         or a promise (asynchronous response).\n   */\n\n  /**\n   * Adds a callback for the specified message.\n   *\n   * The return value of the callback (if not undefined) is sent as response.\n   * @param {string}   name\n   * @param {Port~messageCallback} callback\n   */\n  on(name, callback)\n  {\n    this._eventEmitter.on(name, callback);\n  },\n\n  /**\n   * Removes a callback for the specified message.\n   *\n   * @param {string}   name\n   * @param {Port~messageCallback} callback\n   */\n  off(name, callback)\n  {\n    this._eventEmitter.off(name, callback);\n  },\n\n  /**\n   * Disables the port and makes it stop listening to incoming messages.\n   */\n  disconnect()\n  {\n    ext.onMessage.removeListener(this._onMessage);\n  }\n};\n\n/**\n * The default port to receive messages.\n *\n * @type {Port}\n */\nexports.port = new Port();\n\n/**\n * Creates a new port that is disconnected when the given window is unloaded.\n *\n * @param {Window} window\n * @return {Port}\n */\nexports.getPort = function(window)\n{\n  let port = new Port();\n  window.addEventListener(\"unload\", () =>\n  {\n    port.disconnect();\n  });\n  return port;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/messaging.js\n// module id = 9\n// module chunks = 0","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n\"use strict\";\n\nlet platformVersion = null;\nlet application = null;\nlet applicationVersion;\n\nlet regexp = /(\\S+)\\/(\\S+)(?:\\s*\\(.*?\\))?/g;\nlet match;\n\nwhile (match = regexp.exec(navigator.userAgent))\n{\n  let app = match[1];\n  let ver = match[2];\n\n  if (app == \"Chrome\")\n  {\n    platformVersion = ver;\n  }\n  else if (app != \"Mozilla\" && app != \"AppleWebKit\" && app != \"Safari\")\n  {\n    // For compatibility with legacy websites, Chrome's UA\n    // also includes a Mozilla, AppleWebKit and Safari token.\n    // Any further name/version pair indicates a fork.\n    application = app == \"OPR\" ? \"opera\" : app.toLowerCase();\n    applicationVersion = ver;\n  }\n}\n\n// not a Chromium-based UA, probably modifed by the user\nif (!platformVersion)\n{\n  application = \"unknown\";\n  applicationVersion = platformVersion = \"0\";\n}\n\n// no additional name/version, so this is upstream Chrome\nif (!application)\n{\n  application = \"chrome\";\n  applicationVersion = platformVersion;\n}\n\n\nexports.addonName = \"adblockpluschrome\";\nexports.addonVersion = \"3.1\";\n\nexports.application = application;\nexports.applicationVersion = applicationVersion;\n\nexports.platform = \"chromium\";\nexports.platformVersion = platformVersion;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./buildtools/info.js\n// module id = 10\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nconst {FilterStorage} = require(\"../adblockpluscore/lib/filterStorage\");\nconst {Subscription} = require(\"../adblockpluscore/lib/subscriptionClasses\");\nconst {Filter} = require(\"../adblockpluscore/lib/filterClasses\");\nconst {defaultMatcher} = require(\"../adblockpluscore/lib/matcher\");\nconst {ElemHide} = require(\"../adblockpluscore/lib/elemHide\");\nconst {Prefs} = require(\"../lib/prefs\");\n\nfunction prepareFilterComponents(keepListeners)\n{\n  FilterStorage.subscriptions = [];\n  FilterStorage.knownSubscriptions = Object.create(null);\n  Subscription.knownSubscriptions = Object.create(null);\n  Filter.knownFilters = Object.create(null);\n\n  defaultMatcher.clear();\n  ElemHide.clear();\n}\n\nfunction restoreFilterComponents()\n{\n}\n\nfunction executeFirstRunActions()\n{\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./qunit/common.js\n// module id = 12\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nconst keyPrefix = \"file:\";\n\nfunction fileToKey(fileName)\n{\n  return keyPrefix + fileName;\n}\n\nfunction loadFile(fileName)\n{\n  let key = fileToKey(fileName);\n  return browser.storage.local.get(key).then(items =>\n  {\n    let entry = items[key];\n    if (entry)\n      return entry;\n    throw {type: \"NoSuchFile\"};\n  });\n}\n\nfunction saveFile(fileName, data)\n{\n  return browser.storage.local.set({\n    [fileToKey(fileName)]: {\n      content: Array.from(data),\n      lastModified: Date.now()\n    }\n  });\n}\n\nexports.IO =\n{\n  /**\n   * Reads text lines from a file.\n   * @param {string} fileName\n   *    Name of the file to be read\n   * @param {TextSink} listener\n   *    Function that will be called for each line in the file\n   * @return {Promise}\n   *    Promise to be resolved or rejected once the operation is completed\n   */\n  readFromFile(fileName, listener)\n  {\n    return loadFile(fileName).then(entry =>\n    {\n      for (let line of entry.content)\n        listener(line);\n    });\n  },\n\n  /**\n   * Writes text lines to a file.\n   * @param {string} fileName\n   *    Name of the file to be written\n   * @param {Iterable.<string>} data\n   *    An array-like or iterable object containing the lines (without line\n   *    endings)\n   * @return {Promise}\n   *    Promise to be resolved or rejected once the operation is completed\n   */\n  writeToFile(fileName, data)\n  {\n    return saveFile(fileName, data);\n  },\n\n  /**\n   * Copies a file.\n   * @param {string} fromFile\n   *    Name of the file to be copied\n   * @param {string} toFile\n   *    Name of the file to be written, will be overwritten if exists\n   * @return {Promise}\n   *    Promise to be resolved or rejected once the operation is completed\n   */\n  copyFile(fromFile, toFile)\n  {\n    return loadFile(fromFile).then(entry => saveFile(toFile, entry.content));\n  },\n\n  /**\n   * Renames a file.\n   * @param {string} fromFile\n   *    Name of the file to be renamed\n   * @param {string} newName\n   *    New file name, will be overwritten if exists\n   * @return {Promise}\n   *    Promise to be resolved or rejected once the operation is completed\n   */\n  renameFile(fromFile, newName)\n  {\n    return loadFile(fromFile)\n      .then(entry => browser.storage.local.set({[fileToKey(newName)]: entry}))\n      .then(() => this.removeFile(fromFile));\n  },\n\n  /**\n   * Removes a file.\n   * @param {string} fileName\n   *    Name of the file to be removed\n   * @return {Promise}\n   *    Promise to be resolved or rejected once the operation is completed\n   */\n  removeFile(fileName)\n  {\n    return browser.storage.local.remove(fileToKey(fileName));\n  },\n\n  /**\n   * Retrieves file metadata.\n   * @param {string} fileName\n   *    Name of the file to be looked up\n   * @return {Promise.<StatData>}\n   *    Promise to be resolved with file metadata once the operation is\n   *    completed\n   */\n  statFile(fileName)\n  {\n    return loadFile(fileName).then(entry =>\n    {\n      return {\n        exists: true,\n        lastModified: entry.lastModified\n      };\n    }).catch(error =>\n    {\n      if (error.type == \"NoSuchFile\")\n        return {exists: false};\n      throw error;\n    });\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/io.js\n// module id = 13\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * Converts raw text into a regular expression string\n * @param {string} text the string to convert\n * @return {string} regular expression representation of the text\n */\nfunction textToRegExp(text)\n{\n  return text.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\n\nexports.textToRegExp = textToRegExp;\n\n/**\n * Converts filter text into regular expression string\n * @param {string} text as in Filter()\n * @return {string} regular expression representation of filter text\n */\nfunction filterToRegExp(text)\n{\n  return text\n    // remove multiple wildcards\n    .replace(/\\*+/g, \"*\")\n    // remove anchors following separator placeholder\n    .replace(/\\^\\|$/, \"^\")\n    // escape special symbols\n    .replace(/\\W/g, \"\\\\$&\")\n    // replace wildcards by .*\n    .replace(/\\\\\\*/g, \".*\")\n    // process separator placeholders (all ANSI characters but alphanumeric\n    // characters and _%.-)\n    .replace(/\\\\\\^/g, \"(?:[\\\\x00-\\\\x24\\\\x26-\\\\x2C\\\\x2F\\\\x3A-\\\\x40\\\\x5B-\\\\x5E\\\\x60\\\\x7B-\\\\x7F]|$)\")\n    // process extended anchor at expression start\n    .replace(/^\\\\\\|\\\\\\|/, \"^[\\\\w\\\\-]+:\\\\/+(?!\\\\/)(?:[^\\\\/]+\\\\.)?\")\n    // process anchor at expression start\n    .replace(/^\\\\\\|/, \"^\")\n    // process anchor at expression end\n    .replace(/\\\\\\|$/, \"$\")\n    // remove leading wildcards\n    .replace(/^(\\.\\*)/, \"\")\n    // remove trailing wildcards\n    .replace(/(\\.\\*)$/, \"\");\n}\n\nexports.filterToRegExp = filterToRegExp;\n\nfunction splitSelector(selector)\n{\n  if (selector.indexOf(\",\") == -1)\n    return [selector];\n\n  let selectors = [];\n  let start = 0;\n  let level = 0;\n  let sep = \"\";\n\n  for (let i = 0; i < selector.length; i++)\n  {\n    let chr = selector[i];\n\n    if (chr == \"\\\\\")        // ignore escaped characters\n      i++;\n    else if (chr == sep)    // don't split within quoted text\n      sep = \"\";             // e.g. [attr=\",\"]\n    else if (sep == \"\")\n    {\n      if (chr == '\"' || chr == \"'\")\n        sep = chr;\n      else if (chr == \"(\")  // don't split between parentheses\n        level++;            // e.g. :matches(div,span)\n      else if (chr == \")\")\n        level = Math.max(0, level - 1);\n      else if (chr == \",\" && level == 0)\n      {\n        selectors.push(selector.substring(start, i));\n        start = i + 1;\n      }\n    }\n  }\n\n  selectors.push(selector.substring(start));\n  return selectors;\n}\n\nexports.splitSelector = splitSelector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/common.js\n// module id = 14\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n/**\n * @fileOverview Element hiding implementation.\n */\n\nconst {ElemHideException} = require(\"./filterClasses\");\nconst {FilterNotifier} = require(\"./filterNotifier\");\n\n/**\n * Lookup table, filters by their associated key\n * @type {Filter[]}\n */\nlet filterByKey = [];\n\n/**\n * Lookup table, keys of the filters by filter\n * @type {Map.<Filter,number>}\n */\nlet keyByFilter = new Map();\n\n/**\n * Nested lookup table, filter (or false if inactive) by filter key by domain.\n * (Only contains filters that aren't unconditionally matched for all domains.)\n * @type {Map.<string,Map.<number,(Filter|boolean)>>}\n */\nlet filtersByDomain = new Map();\n\n/**\n * Lookup table, filter key by selector. (Only used for selectors that are\n * unconditionally matched for all domains.)\n * @type {Map.<string,number>}\n */\nlet filterKeyBySelector = new Map();\n\n/**\n * This array caches the keys of filterKeyBySelector table (selectors which\n * unconditionally apply on all domains). It will be null if the cache needs to\n * be rebuilt.\n */\nlet unconditionalSelectors = null;\n\n/**\n * This array caches the values of filterKeyBySelector table (filterIds for\n * selectors which unconditionally apply on all domains). It will be null if the\n * cache needs to be rebuilt.\n */\nlet unconditionalFilterKeys = null;\n\n/**\n * Object to be used instead when a filter has a blank domains property.\n */\nlet defaultDomains = new Map([[\"\", true]]);\n\n/**\n * Set containing known element hiding exceptions\n * @type {Set.<string>}\n */\nlet knownExceptions = new Set();\n\n/**\n * Lookup table, lists of element hiding exceptions by selector\n * @type {Map.<string,Filter>}\n */\nlet exceptions = new Map();\n\n/**\n * Container for element hiding filters\n * @class\n */\nlet ElemHide = exports.ElemHide = {\n  /**\n   * Removes all known filters\n   */\n  clear()\n  {\n    for (let collection of [keyByFilter, filtersByDomain, filterKeyBySelector,\n                            knownExceptions, exceptions])\n    {\n      collection.clear();\n    }\n    filterByKey = [];\n    unconditionalSelectors = unconditionalFilterKeys = null;\n    FilterNotifier.emit(\"elemhideupdate\");\n  },\n\n  _addToFiltersByDomain(key, filter)\n  {\n    let domains = filter.domains || defaultDomains;\n    for (let [domain, isIncluded] of domains)\n    {\n      let filters = filtersByDomain.get(domain);\n      if (!filters)\n        filtersByDomain.set(domain, filters = new Map());\n      filters.set(key, isIncluded ? filter : false);\n    }\n  },\n\n  /**\n   * Add a new element hiding filter\n   * @param {ElemHideFilter} filter\n   */\n  add(filter)\n  {\n    if (filter instanceof ElemHideException)\n    {\n      if (knownExceptions.has(filter.text))\n        return;\n\n      let {selector} = filter;\n      let list = exceptions.get(selector);\n      if (list)\n        list.push(filter);\n      else\n        exceptions.set(selector, [filter]);\n\n      // If this is the first exception for a previously unconditionally\n      // applied element hiding selector we need to take care to update the\n      // lookups.\n      let filterKey = filterKeyBySelector.get(selector);\n      if (typeof filterKey != \"undefined\")\n      {\n        this._addToFiltersByDomain(filterKey, filterByKey[filterKey]);\n        filterKeyBySelector.delete(selector);\n        unconditionalSelectors = unconditionalFilterKeys = null;\n      }\n\n      knownExceptions.add(filter.text);\n    }\n    else\n    {\n      if (keyByFilter.has(filter))\n        return;\n\n      let key = filterByKey.push(filter) - 1;\n      keyByFilter.set(filter, key);\n\n      if (!(filter.domains || exceptions.has(filter.selector)))\n      {\n        // The new filter's selector is unconditionally applied to all domains\n        filterKeyBySelector.set(filter.selector, key);\n        unconditionalSelectors = unconditionalFilterKeys = null;\n      }\n      else\n      {\n        // The new filter's selector only applies to some domains\n        this._addToFiltersByDomain(key, filter);\n      }\n    }\n\n    FilterNotifier.emit(\"elemhideupdate\");\n  },\n\n  _removeFilterKey(key, filter)\n  {\n    if (filterKeyBySelector.get(filter.selector) == key)\n    {\n      filterKeyBySelector.delete(filter.selector);\n      unconditionalSelectors = unconditionalFilterKeys = null;\n      return;\n    }\n\n    // We haven't found this filter in unconditional filters, look in\n    // filtersByDomain.\n    let domains = filter.domains || defaultDomains;\n    for (let domain of domains.keys())\n    {\n      let filters = filtersByDomain.get(domain);\n      if (filters)\n        filters.delete(key);\n    }\n  },\n\n  /**\n   * Removes an element hiding filter\n   * @param {ElemHideFilter} filter\n   */\n  remove(filter)\n  {\n    if (filter instanceof ElemHideException)\n    {\n      if (!knownExceptions.has(filter.text))\n        return;\n\n      let list = exceptions.get(filter.selector);\n      let index = list.indexOf(filter);\n      if (index >= 0)\n        list.splice(index, 1);\n      knownExceptions.delete(filter.text);\n    }\n    else\n    {\n      let key = keyByFilter.get(filter);\n      if (typeof key == \"undefined\")\n        return;\n\n      delete filterByKey[key];\n      keyByFilter.delete(filter);\n      this._removeFilterKey(key, filter);\n    }\n\n    FilterNotifier.emit(\"elemhideupdate\");\n  },\n\n  /**\n   * Checks whether an exception rule is registered for a filter on a particular\n   * domain.\n   * @param {Filter} filter\n   * @param {string} docDomain\n   * @return {ElemHideException}\n   */\n  getException(filter, docDomain)\n  {\n    let list = exceptions.get(filter.selector);\n    if (!list)\n      return null;\n\n    for (let i = list.length - 1; i >= 0; i--)\n    {\n      if (list[i].isActiveOnDomain(docDomain))\n        return list[i];\n    }\n\n    return null;\n  },\n\n  /**\n   * Retrieves an element hiding filter by the corresponding protocol key\n   * @param {number} key\n   * @return {Filter}\n   */\n  getFilterByKey(key)\n  {\n    return (key in filterByKey ? filterByKey[key] : null);\n  },\n\n  /**\n   * Returns a list of all selectors as a nested map. On first level, the keys\n   * are all values of `ElemHideBase.selectorDomain` (domains on which these\n   * selectors should apply, ignoring exceptions). The values are maps again,\n   * with the keys being selectors and values the corresponding filter keys.\n   * @returns {Map.<String,Map<String,String>>}\n   */\n  getSelectors()\n  {\n    let domains = new Map();\n    for (let key in filterByKey)\n    {\n      let filter = filterByKey[key];\n      if (!filter.selector)\n        continue;\n\n      let domain = filter.selectorDomain || \"\";\n\n      if (!domains.has(domain))\n        domains.set(domain, new Map());\n      domains.get(domain).set(filter.selector, key);\n    }\n\n    return domains;\n  },\n\n  /**\n   * Returns a list of selectors that apply on each website unconditionally.\n   * @returns {string[]}\n   */\n  getUnconditionalSelectors()\n  {\n    if (!unconditionalSelectors)\n      unconditionalSelectors = [...filterKeyBySelector.keys()];\n    return unconditionalSelectors.slice();\n  },\n\n  /**\n   * Returns a list of filter keys for selectors which apply to all websites\n   * without exception.\n   * @returns {number[]}\n   */\n  getUnconditionalFilterKeys()\n  {\n    if (!unconditionalFilterKeys)\n    {\n      let selectors = this.getUnconditionalSelectors();\n      unconditionalFilterKeys = [];\n      for (let selector of selectors)\n        unconditionalFilterKeys.push(filterKeyBySelector.get(selector));\n    }\n    return unconditionalFilterKeys.slice();\n  },\n\n\n  /**\n   * Constant used by getSelectorsForDomain to return all selectors applying to\n   * a particular hostname.\n   */\n  ALL_MATCHING: 0,\n\n  /**\n   * Constant used by getSelectorsForDomain to exclude selectors which apply to\n   * all websites without exception.\n   */\n  NO_UNCONDITIONAL: 1,\n\n  /**\n   * Constant used by getSelectorsForDomain to return only selectors for filters\n   * which specifically match the given host name.\n   */\n  SPECIFIC_ONLY: 2,\n\n  /**\n   * Determines from the current filter list which selectors should be applied\n   * on a particular host name. Optionally returns the corresponding filter\n   * keys.\n   * @param {string} domain\n   * @param {number} [criteria]\n   *   One of the following: ElemHide.ALL_MATCHING, ElemHide.NO_UNCONDITIONAL or\n   *                         ElemHide.SPECIFIC_ONLY.\n   * @param {boolean} [provideFilterKeys]\n   *   If true, the function will return a list of corresponding filter keys in\n   *   addition to selectors.\n   * @returns {string[]|Array.<string[]>}\n   *   List of selectors or an array with two elements (list of selectors and\n   *   list of corresponding keys) if provideFilterKeys is true.\n   */\n  getSelectorsForDomain(domain, criteria, provideFilterKeys)\n  {\n    let filterKeys = [];\n    let selectors = [];\n\n    if (typeof criteria == \"undefined\")\n      criteria = ElemHide.ALL_MATCHING;\n    if (criteria < ElemHide.NO_UNCONDITIONAL)\n    {\n      selectors = this.getUnconditionalSelectors();\n      if (provideFilterKeys)\n        filterKeys = this.getUnconditionalFilterKeys();\n    }\n\n    let specificOnly = (criteria >= ElemHide.SPECIFIC_ONLY);\n    let seenFilters = new Set();\n    let currentDomain = domain ? domain.toUpperCase() : \"\";\n    while (true)\n    {\n      if (specificOnly && currentDomain == \"\")\n        break;\n\n      let filters = filtersByDomain.get(currentDomain);\n      if (filters)\n      {\n        for (let [filterKey, filter] of filters)\n        {\n          if (seenFilters.has(filterKey))\n            continue;\n          seenFilters.add(filterKey);\n\n          if (filter && !this.getException(filter, domain))\n          {\n            selectors.push(filter.selector);\n            // It is faster to always push the key, even if not required.\n            filterKeys.push(filterKey);\n          }\n        }\n      }\n\n      if (currentDomain == \"\")\n        break;\n\n      let nextDot = currentDomain.indexOf(\".\");\n      currentDomain = nextDot == -1 ? \"\" : currentDomain.substr(nextDot + 1);\n    }\n\n    if (provideFilterKeys)\n      return [selectors, filterKeys];\n    return selectors;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/elemHide.js\n// module id = 15\n// module chunks = 0","\"use strict\";\n\n{\n  const {Prefs} = require(\"../../lib/prefs\");\n\n  QUnit.module(\"Preferences\", {\n    setup()\n    {\n      this._pbackup = Object.create(null);\n      for (let pref in Prefs)\n      {\n        let value = Prefs[pref];\n        this._pbackup[pref] = value;\n      }\n      Prefs.enabled = true;\n    },\n\n    teardown()\n    {\n      for (let pref in this._pbackup)\n        Prefs[pref] = this._pbackup[pref];\n    }\n  });\n\n  function checkPrefExists(name, expectedValue, description, assert)\n  {\n    let done = assert.async();\n    let key = \"pref:\" + name;\n    browser.storage.local.get(key, items =>\n    {\n      equal(key in items, expectedValue, description);\n      done();\n    });\n  }\n\n  function checkPref(name, expectedValue, description, assert)\n  {\n    let done = assert.async();\n    let key = \"pref:\" + name;\n    browser.storage.local.get(key, items =>\n    {\n      deepEqual(items[key], expectedValue, description);\n      done();\n    });\n  }\n\n  test(\"Numerical pref\", assert =>\n  {\n    Prefs.patternsbackups = 0;\n    equal(\n      Prefs.patternsbackups, 0,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"default value\"\n    );\n    checkPrefExists(\n      \"patternsbackups\", false, \"User-defined pref has been removed\", assert\n    );\n    Prefs.patternsbackups = 12;\n    equal(\n      Prefs.patternsbackups, 12,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"non-default value\"\n    );\n    checkPrefExists(\n      \"patternsbackups\", true, \"User-defined pref has been created\", assert\n    );\n    checkPref(\"patternsbackups\", 12, \"Value has been written\", assert);\n  });\n\n  test(\"Boolean pref\", assert =>\n  {\n    Prefs.enabled = true;\n    equal(\n      Prefs.enabled, true,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"default value\"\n    );\n    checkPrefExists(\"enabled\", false, \"User-defined pref has been removed\",\n                    assert);\n    Prefs.enabled = false;\n    equal(\n      Prefs.enabled, false,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"non-default value\"\n    );\n    checkPrefExists(\"enabled\", true, \"User-defined pref has been created\",\n                    assert);\n    checkPref(\"enabled\", false, \"Value has been written\", assert);\n  });\n\n  test(\"String pref\", assert =>\n  {\n    let defaultValue = \"https://notification.adblockplus.org/notification.json\";\n    Prefs.notificationurl = defaultValue;\n    equal(\n      Prefs.notificationurl, defaultValue,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"default value\"\n    );\n    checkPrefExists(\"notificationurl\", false,\n                    \"User-defined pref has been removed\", assert);\n\n    let newValue = \"https://notification.adblockplus.org/foo\\u1234bar.json\";\n    Prefs.notificationurl = newValue;\n    equal(\n      Prefs.notificationurl, newValue,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"non-default value\"\n    );\n    checkPrefExists(\"notificationurl\", true,\n                    \"User-defined pref has been created\", assert);\n    checkPref(\"notificationurl\", newValue, \"Value has been written\", assert);\n  });\n\n  test(\"Object pref (complete replacement)\", assert =>\n  {\n    Prefs.notificationdata = {};\n    deepEqual(\n      Prefs.notificationdata, {},\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"default value\"\n    );\n\n    let newValue = {foo: 1, bar: \"adsf\\u1234\"};\n    Prefs.notificationdata = newValue;\n    equal(\n      Prefs.notificationdata, newValue,\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"non-default value\"\n    );\n    checkPrefExists(\"notificationdata\", true,\n                    \"User-defined pref has been created\", assert);\n    checkPref(\"notificationdata\", newValue, \"Value has been written\", assert);\n  });\n\n  test(\"Property-wise modification\", assert =>\n  {\n    Prefs.notificationdata = {};\n\n    Prefs.notificationdata.foo = 1;\n    Prefs.notificationdata.bar = 2;\n    Prefs.notificationdata = JSON.parse(JSON.stringify(Prefs.notificationdata));\n    deepEqual(\n      Prefs.notificationdata, {foo: 1, bar: 2},\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"non-default value\"\n    );\n    checkPrefExists(\"notificationdata\", true,\n                    \"User-defined pref has been created\", assert);\n    checkPref(\"notificationdata\", {foo: 1, bar: 2}, \"Value has been written\",\n              assert);\n\n    delete Prefs.notificationdata.foo;\n    delete Prefs.notificationdata.bar;\n    Prefs.notificationdata = JSON.parse(JSON.stringify(Prefs.notificationdata));\n    deepEqual(\n      Prefs.notificationdata, {},\n      \"Prefs object returns the correct value after setting pref to \" +\n      \"default value\"\n    );\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./qunit/tests/prefs.js\n// module id = 16\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\n{\n  let {getDecodedHostname,\n       extractHostFromFrame,\n       stringifyURL,\n       isThirdParty} = require(\"../../lib/url\");\n\n  QUnit.module(\"URL/host tools\");\n\n  test(\"Extracting hostname from URL\", () =>\n  {\n    function testURLHostname(url, expectedHostname, message)\n    {\n      equal(getDecodedHostname(new URL(url)), expectedHostname, message);\n    }\n\n    testURLHostname(\"http://example.com/foo\", \"example.com\", \"with path\");\n    testURLHostname(\"http://example.com/?foo=bar\", \"example.com\", \"with query\");\n    testURLHostname(\"http://example.com/#top\", \"example.com\", \"with hash\");\n    testURLHostname(\"http://example.com:8080/\", \"example.com\", \"with port\");\n    testURLHostname(\"http://user:password@example.com/\", \"example.com\",\n                    \"with auth credentials\");\n    testURLHostname(\"http://xn--f-1gaa.com/\", \"f\\u00f6\\u00f6.com\",\n                    \"with punycode\");\n    testURLHostname(\"about:blank\", \"\", \"about:blank\");\n    testURLHostname(\"data:text/plain,foo\", \"\", \"data: URL\");\n    testURLHostname(\"ftp://example.com/\", \"example.com\", \"ftp: URL\");\n    testURLHostname(\"http://1.2.3.4:8000/\", \"1.2.3.4\", \"IPv4 address\");\n    testURLHostname(\"http://[2001:db8:85a3::8a2e:370:7334]/\",\n                    \"[2001:db8:85a3::8a2e:370:7334]\", \"IPv6 address\");\n  });\n\n  test(\"Extracting hostname from frame\", () =>\n  {\n    function testFrameHostname(hierarchy, expectedHostname, message)\n    {\n      let frame = null;\n\n      for (let url of hierarchy)\n        frame = {parent: frame, url: new URL(url)};\n\n      equal(extractHostFromFrame(frame), expectedHostname, message);\n    }\n\n    testFrameHostname([\"http://example.com/\"], \"example.com\", \"single frame\");\n    testFrameHostname([\"http://example.com/\", \"http://example.org/\"],\n                      \"example.org\", \"with parent frame\");\n    testFrameHostname([\"http://example.com/\", \"data:text/plain,foo\"],\n                      \"example.com\", \"data: URL, hostname in parent\");\n    testFrameHostname([\"http://example.com/\", \"about:blank\", \"about:blank\"],\n                      \"example.com\", \"about:blank, hostname in ancestor\");\n    testFrameHostname([\"about:blank\", \"about:blank\"], \"\",\n                      \"about:blank, no hostname\");\n    testFrameHostname([\"http://xn--f-1gaa.com/\"], \"f\\u00f6\\u00f6.com\",\n                      \"with punycode\");\n  });\n\n  test(\"Stringifying URLs\", () =>\n  {\n    function testNormalizedURL(url, expectedURL, message)\n    {\n      equal(stringifyURL(new URL(url)), expectedURL, message);\n    }\n\n    function testPreservedURL(url, message)\n    {\n      testNormalizedURL(url, url, message);\n    }\n\n    testPreservedURL(\"http://example.com/foo\", \"includes path\");\n    testPreservedURL(\"http://example.com/?foo=bar\", \"includes query\");\n    testPreservedURL(\"http://example.com:8080/\", \"includes port\");\n    testPreservedURL(\"http://example.com/?\", \"with empty query string\");\n    testNormalizedURL(\"http://example.com/#top\", \"http://example.com/\",\n                      \"stripped hash\");\n    testNormalizedURL(\"http://example.com/#top?\", \"http://example.com/\",\n                      \"stripped hash with trailing question mark\");\n    testNormalizedURL(\"http://xn--f-1gaa.com/\", \"http://f\\u00f6\\u00f6.com/\",\n                      \"decoded punycode\");\n    testPreservedURL(\"about:blank\", \"about:blank\");\n    testPreservedURL(\"data:text/plain,foo\", \"data: URL\");\n  });\n\n  test(\"Third-party checks\", () =>\n  {\n    function hostnameToURL(hostname)\n    {\n      return new URL(\"http://\" + hostname);\n    }\n\n    function testThirdParty(requestHost, documentHost, expected, message)\n    {\n      equal(\n        isThirdParty(\n          hostnameToURL(requestHost),\n\n          // Chrome's URL object normalizes IP addresses. So some test\n          // will fail if we don't normalize the document host as well.\n          getDecodedHostname(hostnameToURL(documentHost))\n        ),\n        expected,\n        message\n      );\n    }\n\n    testThirdParty(\"foo\", \"foo\", false, \"same domain isn't third-party\");\n    testThirdParty(\"foo\", \"bar\", true, \"different domain is third-party\");\n    testThirdParty(\"foo.com\", \"foo.com\", false,\n                   \"same domain with TLD (.com) isn't third-party\");\n    testThirdParty(\"foo.com\", \"bar.com\", true,\n                   \"same TLD (.com) but different domain is third-party\");\n    testThirdParty(\"foo.com\", \"www.foo.com\", false,\n                   \"same domain but differend subdomain isn't third-party\");\n    testThirdParty(\"foo.example.com\", \"bar.example.com\", false,\n                   \"same basedomain (example.com) isn't third-party\");\n    testThirdParty(\"foo.uk\", \"bar.uk\", true,\n                   \"same TLD (.uk) but different domain is third-party\");\n    testThirdParty(\"foo.co.uk\", \"bar.co.uk\", true,\n                   \"same TLD (.co.uk) but different domain is third-party\");\n    testThirdParty(\"foo.example.co.uk\", \"bar.example.co.uk\", false,\n                   \"same basedomain (example.co.uk) isn't third-party\");\n    testThirdParty(\"1.2.3.4\", \"1.2.3.4\", false,\n                   \"same IPv4 address isn't third-party\");\n    testThirdParty(\"1.1.1.1\", \"2.1.1.1\", true,\n                   \"different IPv4 address is third-party\");\n    testThirdParty(\"0x01ff0101\", \"0x01ff0101\", false,\n                   \"same IPv4 hexadecimal address isn't third-party\");\n    testThirdParty(\"0x01ff0101\", \"0x01ff0102\", true,\n                   \"different IPv4 hexadecimal address is third-party\");\n    testThirdParty(\n      \"1.0xff.3.4\", \"1.0xff.3.4\", false,\n      \"same IPv4 address with hexadecimal octet isn't third-party\"\n    );\n    testThirdParty(\n      \"1.0xff.1.1\", \"2.0xff.1.1\", true,\n      \"different IPv4 address with hexadecimal octet is third-party\"\n    );\n    testThirdParty(\n      \"0xff.example.com\", \"example.com\", false,\n      \"domain starts like a hexadecimal IPv4 address but isn't one\"\n    );\n    testThirdParty(\n      \"[2001:db8:85a3::8a2e:370:7334]\", \"[2001:db8:85a3::8a2e:370:7334]\", false,\n      \"same IPv6 address isn't third-party\"\n    );\n    testThirdParty(\n      \"[2001:db8:85a3::8a2e:370:7334]\", \"[5001:db8:85a3::8a2e:370:7334]\", true,\n      \"different IPv6 address is third-party\"\n    );\n    testThirdParty(\n      \"[::ffff:192.0.2.128]\", \"[::ffff:192.0.2.128]\", false,\n      \"same IPv4-mapped IPv6 address isn't third-party\"\n    );\n    testThirdParty(\n      \"[::ffff:192.0.2.128]\", \"[::ffff:192.1.2.128]\", true,\n      \"different IPv4-mapped IPv6 address is third-party\"\n    );\n    testThirdParty(\"xn--f-1gaa.com\", \"f\\u00f6\\u00f6.com\", false,\n                   \"same IDN isn't third-party\");\n    testThirdParty(\"example.com..\", \"example.com....\", false,\n                   \"traling dots are ignored\");\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./qunit/tests/url.js\n// module id = 17\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/* global publicSuffixes */\n\n/** @module tldjs */\n\n\"use strict\";\n\n/**\n * Get the base domain for given hostname.\n *\n * @param {string} hostname\n * @return {string}\n */\nexports.getDomain = hostname =>\n{\n  let bits = hostname.split(\".\");\n  let cutoff = bits.length - 2;\n\n  for (let i = 0; i < bits.length; i++)\n  {\n    let offset = publicSuffixes[bits.slice(i).join(\".\")];\n\n    if (typeof offset != \"undefined\")\n    {\n      cutoff = i - offset;\n      break;\n    }\n  }\n\n  if (cutoff <= 0)\n    return hostname;\n\n  return bits.slice(cutoff).join(\".\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tldjs.js\n// module id = 18\n// module chunks = 0","/*\n * Copyright (C) 2011-2016 Mathias Bynens <https://mathiasbynens.be/>\n * Copyright (C) 2016-present eyeo GmbH (Minor modifications for compatibility.)\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint.apply(null, array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint.apply(null, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (let currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (let currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (let currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nmodule.exports = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.0.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/punycode.js\n// module id = 19\n// module chunks = 0","\"use strict\";\n\n{\n  const {Filter, ElemHideFilter} =\n    require(\"../../adblockpluscore/lib/filterClasses\");\n  const {escapeCSS, quoteCSS} = require(\"../../lib/filterComposer\");\n\n  QUnit.module(\"CSS escaping\");\n\n  test(\"CSS escaping\", () =>\n  {\n    function testSelector(opts)\n    {\n      let mustMatch = opts.mustMatch !== false;\n      let doc = document.implementation.createHTMLDocument();\n\n      let style = doc.createElement(\"style\");\n      doc.documentElement.appendChild(style);\n      style.sheet.insertRule(opts.selector + \" {}\", 0);\n\n      let element;\n      try\n      {\n        element = doc.createElement(opts.tagName || \"div\");\n      }\n      catch (e)\n      {\n        // Some characters we are going to test can not occur in tag names,\n        // but we still have to make sure that no exception is thrown when\n        // calling .querySelector() and .insertRule()\n        element = null;\n        mustMatch = false;\n      }\n\n      if (element)\n      {\n        for (let attr in opts.attributes)\n          element.setAttribute(attr, opts.attributes[attr]);\n\n        doc.documentElement.appendChild(element);\n      }\n\n      let foundElement = doc.querySelector(opts.selector);\n      let filter = Filter.fromText(\"##\" + opts.selector);\n\n      if (!(filter instanceof ElemHideFilter))\n        ok(false, opts.selector + \" (not allowed in elemhide filters)\");\n      else if (mustMatch)\n        equal(foundElement, element, opts.selector);\n      else\n        ok(true, opts.selector);\n    }\n\n    function testEscape(s)\n    {\n      testSelector({\n        selector: escapeCSS(s),\n        tagName: s\n      });\n\n      testSelector({\n        selector: \"#\" + escapeCSS(s),\n        attributes: {id: s}\n      });\n\n      testSelector({\n        selector: \".\" + escapeCSS(s),\n        attributes: {class: s},\n\n        // Whitespace characters split the class name, hence the selector\n        // won't match. But we still have to make sure that no exception\n        // is thrown when calling .querySelector() and .insertRule()\n        mustMatch: !/\\s/.test(s)\n      });\n\n      testSelector({\n        selector: \"[foo=\" + quoteCSS(s) + \"]\",\n        attributes: {foo: s}\n      });\n    }\n\n    for (let i = 1; i < 0x80; i++)\n    {\n      let chr = String.fromCharCode(i);\n\n      // Make sure that all ASCII characters are correctly escaped.\n      testEscape(chr);\n\n      // Some characters are only escaped when in the first positon,\n      // so we still have to make sure that everything is correctly escaped\n      // in subsequent positions.\n      testEscape(\"x\" + chr);\n\n      // Leading dashes must be escaped, when followed by certain characters.\n      testEscape(\"-\" + chr);\n    }\n\n    // Test some non-ASCII characters. However, those shouldn't\n    // require escaping.\n    testEscape(\"\\uD83D\\uDE3B\\u2665\\u00E4\");\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./qunit/tests/cssEscaping.js\n// module id = 20\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module filterComposer */\n\n\"use strict\";\n\nconst {defaultMatcher} = require(\"../adblockpluscore/lib/matcher\");\nconst {RegExpFilter} = require(\"../adblockpluscore/lib/filterClasses\");\nconst {FilterNotifier} = require(\"../adblockpluscore/lib/filterNotifier\");\nconst {Prefs} = require(\"./prefs\");\nconst {extractHostFromFrame, stringifyURL, isThirdParty} = require(\"./url\");\nconst {getKey, checkWhitelisted} = require(\"./whitelisting\");\nconst {port} = require(\"./messaging\");\nconst info = require(\"../buildtools/info\");\n\nlet readyPages = new ext.PageMap();\n\n/**\n * Checks whether the given page is ready to use the filter composer\n *\n * @param {Page} page\n * @return {boolean}\n */\nexports.isPageReady = page =>\n{\n  return readyPages.has(page);\n};\n\nfunction isValidString(s)\n{\n  return s && s.indexOf(\"\\0\") == -1;\n}\n\nfunction escapeChar(chr)\n{\n  let code = chr.charCodeAt(0);\n\n  // Control characters and leading digits must be escaped based on\n  // their char code in CSS. Moreover, curly brackets aren't allowed\n  // in elemhide filters, and therefore must be escaped based on their\n  // char code as well.\n  if (code <= 0x1F || code == 0x7F || /[\\d{}]/.test(chr))\n    return \"\\\\\" + code.toString(16) + \" \";\n\n  return \"\\\\\" + chr;\n}\n\nlet escapeCSS =\n/**\n * Escapes a token (e.g. tag, id, class or attribute) to be used in\n * CSS selectors.\n *\n * @param {string} s\n * @return {string}\n * @static\n */\nexports.escapeCSS = s =>\n{\n  return s.replace(/^[\\d-]|[^\\w\\-\\u0080-\\uFFFF]/g, escapeChar);\n};\n\nlet quoteCSS =\n/**\n * Quotes a string to be used as attribute value in CSS selectors.\n *\n * @param {string} value\n * @return {string}\n * @static\n */\nexports.quoteCSS = value =>\n{\n  return '\"' + value.replace(/[\"\\\\{}\\x00-\\x1F\\x7F]/g, escapeChar) + '\"';\n};\n\nfunction composeFilters(details)\n{\n  let {page, frame} = details;\n  let filters = [];\n  let selectors = [];\n\n  if (!checkWhitelisted(page, frame))\n  {\n    let typeMask = RegExpFilter.typeMap[details.type];\n    let docDomain = extractHostFromFrame(frame);\n    let specificOnly = checkWhitelisted(page, frame, null,\n                                        RegExpFilter.typeMap.GENERICBLOCK);\n\n    // Add a blocking filter for each URL of the element that can be blocked\n    for (let url of details.urls)\n    {\n      let urlObj = new URL(url, details.baseURL);\n      url = stringifyURL(urlObj);\n\n      let filter = defaultMatcher.whitelist.matchesAny(\n        url, typeMask, docDomain,\n        isThirdParty(urlObj, docDomain),\n        getKey(page, frame), specificOnly\n      );\n\n      if (!filter)\n      {\n        let filterText = url.replace(/^[\\w-]+:\\/+(?:www\\.)?/, \"||\");\n\n        if (specificOnly)\n          filterText += \"$domain=\" + docDomain;\n\n        if (!filters.includes(filterText))\n          filters.push(filterText);\n      }\n    }\n\n    // If we couldn't generate any blocking filters, fallback to element hiding\n    if (filters.length == 0 && !checkWhitelisted(page, frame, null,\n                                                 RegExpFilter.typeMap.ELEMHIDE))\n    {\n      // Generate CSS selectors based on the element's \"id\" and\n      // \"class\" attribute.\n      if (isValidString(details.id))\n        selectors.push(\"#\" + escapeCSS(details.id));\n\n      let classes = details.classes.filter(isValidString);\n      if (classes.length > 0)\n        selectors.push(classes.map(c => \".\" + escapeCSS(c)).join(\"\"));\n\n      // If there is a \"src\" attribute, specifiying a URL that we can't block,\n      // generate a CSS selector matching the \"src\" attribute\n      if (isValidString(details.src))\n      {\n        selectors.push(\n          escapeCSS(details.tagName) + \"[src=\" + quoteCSS(details.src) + \"]\"\n        );\n      }\n\n      // As last resort, if there is a \"style\" attribute, and we\n      // couldn't generate any filters so far, generate a CSS selector\n      // matching the \"style\" attribute\n      if (isValidString(details.style) && selectors.length == 0 &&\n          filters.length == 0)\n      {\n        selectors.push(\n          escapeCSS(details.tagName) + \"[style=\" + quoteCSS(details.style) + \"]\"\n        );\n      }\n\n      // Add an element hiding filter for each generated CSS selector\n      for (let selector of selectors)\n        filters.push(docDomain.replace(/^www\\./, \"\") + \"##\" + selector);\n    }\n  }\n\n  return {filters, selectors};\n}\n\nlet contextMenuItem = {\n  title: browser.i18n.getMessage(\"block_element\"),\n  contexts: [\"image\", \"video\", \"audio\"],\n  onclick(page)\n  {\n    page.sendMessage({type: \"composer.content.contextMenuClicked\"});\n  }\n};\n\nfunction updateContextMenu(page, filter)\n{\n  page.contextMenus.remove(contextMenuItem);\n\n  if (typeof filter == \"undefined\")\n    filter = checkWhitelisted(page);\n\n  // We don't support the filter composer on Firefox for Android, because the\n  // user experience on mobile is quite different.\n  if (info.application != \"fennec\" &&\n      !filter && Prefs.shouldShowBlockElementMenu && readyPages.has(page))\n  {\n    page.contextMenus.create(contextMenuItem);\n  }\n}\n\nFilterNotifier.on(\"page.WhitelistingStateRevalidate\", updateContextMenu);\n\nPrefs.on(\"shouldShowBlockElementMenu\", () =>\n{\n  browser.tabs.query({}, tabs =>\n  {\n    for (let tab of tabs)\n      updateContextMenu(new ext.Page(tab));\n  });\n});\n\nport.on(\"composer.isPageReady\", (message, sender) =>\n{\n  return readyPages.has(new ext.Page({id: message.pageId}));\n});\n\nport.on(\"composer.ready\", (message, sender) =>\n{\n  readyPages.set(sender.page, null);\n  updateContextMenu(sender.page);\n});\n\nport.on(\"composer.openDialog\", (message, sender) =>\n{\n  return browser.windows.create({\n    url: browser.extension.getURL(\"composer.html\"),\n    left: 50,\n    top: 50,\n    width: 420,\n    height: 200,\n    type: \"popup\"\n  }).then(window =>\n  {\n    // The windows.create API with versions of Firefox < 52 doesn't seem to\n    // populate the tabs property reliably.\n    if (\"tabs\" in window)\n      return window;\n    return browser.windows.get(window.id, {populate: true});\n  }).then(window =>\n  {\n    let popupPageId = window.tabs[0].id;\n\n    let doInitAttempt = 0;\n    let doInit = () =>\n    {\n      doInitAttempt += 1;\n      if (doInitAttempt > 30)\n        return;\n\n      browser.tabs.sendMessage(popupPageId, {\n        type: \"composer.dialog.init\",\n        sender: sender.page.id,\n        filters: message.filters\n      }).then(response =>\n      {\n        // Sometimes sendMessage incorrectly reports a success on Firefox, so\n        // we must check the response too.\n        if (!response)\n          throw new Error();\n      }).catch(e =>\n      {\n        // Firefox sometimes sets the status for a window to \"complete\" before\n        // it is ready to receive messages[1]. As a workaround we'll try again a\n        // few times with a second delay.\n        // [1] - https://bugzilla.mozilla.org/show_bug.cgi?id=1418655\n        setTimeout(doInit, 100);\n      });\n    };\n    if (window.tabs[0].status != \"complete\")\n    {\n      let updateListener = (tabId, changeInfo, tab) =>\n      {\n        if (tabId == popupPageId && changeInfo.status == \"complete\")\n        {\n          browser.tabs.onUpdated.removeListener(updateListener);\n          doInit();\n        }\n      };\n      browser.tabs.onUpdated.addListener(updateListener);\n    }\n    else\n      doInit();\n\n    let onRemoved = removedTabId =>\n    {\n      if (removedTabId == popupPageId)\n      {\n        sender.page.sendMessage({\n          type: \"composer.content.dialogClosed\",\n          popupId: popupPageId\n        });\n        browser.tabs.onRemoved.removeListener(onRemoved);\n      }\n    };\n    browser.tabs.onRemoved.addListener(onRemoved);\n\n    if (info.application == \"firefox\" && navigator.oscpu.startsWith(\"Linux\"))\n    {\n      // Work around https://bugzil.la/1408446\n      browser.windows.update(window.id, {width: window.width + 1});\n    }\n    return popupPageId;\n  });\n});\n\nport.on(\"composer.getFilters\", (message, sender) =>\n{\n  return composeFilters({\n    tagName: message.tagName,\n    id: message.id,\n    src: message.src,\n    style: message.style,\n    classes: message.classes,\n    urls: message.urls,\n    type: message.mediatype,\n    baseURL: message.baseURL,\n    page: sender.page,\n    frame: sender.frame\n  });\n});\n\nport.on(\"composer.forward\", (msg, sender) =>\n{\n  let targetPage;\n  if (msg.targetPageId)\n    targetPage = ext.getPage(msg.targetPageId);\n  else\n    targetPage = sender.page;\n  if (targetPage)\n  {\n    msg.payload.sender = sender.page.id;\n    if (msg.expectsResponse)\n      return new Promise(targetPage.sendMessage.bind(targetPage, msg.payload));\n    targetPage.sendMessage(msg.payload);\n  }\n});\n\next.pages.onLoading.addListener(page =>\n{\n  // When tabs start loading we send them a message to ensure that the state\n  // of the \"block element\" tool is reset. This is necessary since Firefox will\n  // sometimes cache the state of a tab when the user navigates back / forward,\n  // which includes the state of the \"block element\" tool.\n  // Since sending this message will often fail (e.g. for new tabs which have\n  // just been opened) we catch and ignore any exception thrown.\n  browser.tabs.sendMessage(\n    page.id, {type: \"composer.content.finished\"}\n  ).catch(() => {});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/filterComposer.js\n// module id = 21\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** @module whitelisting */\n\n\"use strict\";\n\nconst {defaultMatcher} = require(\"../adblockpluscore/lib/matcher\");\nconst {Filter, RegExpFilter} = require(\"../adblockpluscore/lib/filterClasses\");\nconst {FilterNotifier} = require(\"../adblockpluscore/lib/filterNotifier\");\nconst {FilterStorage} = require(\"../adblockpluscore/lib/filterStorage\");\nconst {stringifyURL, getDecodedHostname,\n       extractHostFromFrame, isThirdParty} = require(\"./url\");\nconst {port} = require(\"./messaging\");\nconst {logWhitelistedDocument} = require(\"./devtools\");\nconst {verifySignature} = require(\"../adblockpluscore/lib/rsa\");\n\nlet sitekeys = new ext.PageMap();\n\nfunction match(page, url, typeMask, docDomain, sitekey)\n{\n  let thirdParty = !!docDomain && isThirdParty(url, docDomain);\n  let urlString = stringifyURL(url);\n\n  if (!docDomain)\n    docDomain = getDecodedHostname(url);\n\n  let filter = defaultMatcher.whitelist.matchesAny(\n    urlString, typeMask, docDomain, thirdParty, sitekey\n  );\n\n  if (filter && page)\n    logWhitelistedDocument(page.id, urlString, typeMask, docDomain, filter);\n\n  return filter;\n}\n\nlet checkWhitelisted =\n/**\n * Gets the active whitelisting filter for the document associated\n * with the given page/frame, or null if it's not whitelisted.\n *\n * @param {?Page}   page\n * @param {?Frame} [frame]\n * @param {?URL}   [originUrl]\n * @param {number} [typeMask=RegExpFilter.typeMap.DOCUMENT]\n * @return {?WhitelistFilter}\n */\nexports.checkWhitelisted = (page, frame, originUrl,\n                            typeMask = RegExpFilter.typeMap.DOCUMENT) =>\n{\n  if (frame || originUrl)\n  {\n    while (frame)\n    {\n      let parentFrame = frame.parent;\n      let filter = match(page, frame.url, typeMask,\n                         extractHostFromFrame(parentFrame, originUrl),\n                         getKey(page, frame, originUrl));\n\n      if (filter)\n        return filter;\n\n      frame = parentFrame;\n    }\n\n    return originUrl && match(page, originUrl, typeMask, null,\n                              getKey(null, null, originUrl));\n  }\n\n  return page && match(page, page.url, typeMask);\n};\n\nport.on(\"filters.isWhitelisted\", message =>\n{\n  return !!checkWhitelisted(new ext.Page(message.tab));\n});\n\nport.on(\"filters.whitelist\", message =>\n{\n  let page = new ext.Page(message.tab);\n  let host = getDecodedHostname(page.url).replace(/^www\\./, \"\");\n  let filter = Filter.fromText(\"@@||\" + host + \"^$document\");\n  if (filter.subscriptions.length && filter.disabled)\n  {\n    filter.disabled = false;\n  }\n  else\n  {\n    filter.disabled = false;\n    FilterStorage.addFilter(filter);\n  }\n});\n\nport.on(\"filters.unwhitelist\", message =>\n{\n  let page = new ext.Page(message.tab);\n  // Remove any exception rules applying to this URL\n  let filter = checkWhitelisted(page);\n  while (filter)\n  {\n    FilterStorage.removeFilter(filter);\n    if (filter.subscriptions.length)\n      filter.disabled = true;\n    filter = checkWhitelisted(page);\n  }\n});\n\nfunction revalidateWhitelistingState(page)\n{\n  FilterNotifier.emit(\n    \"page.WhitelistingStateRevalidate\",\n    page, checkWhitelisted(page)\n  );\n}\n\nFilterNotifier.on(\"filter.behaviorChanged\", () =>\n{\n  browser.tabs.query({}, tabs =>\n  {\n    for (let tab of tabs)\n      revalidateWhitelistingState(new ext.Page(tab));\n  });\n});\n\next.pages.onLoading.addListener(revalidateWhitelistingState);\n\nlet getKey =\n/**\n * Gets the public key, previously recorded for the given page\n * and frame, to be considered for the $sitekey filter option.\n *\n * @param {?Page}   page\n * @param {?Frame}  frame\n * @param {URL}    [originUrl]\n * @return {string}\n */\nexports.getKey = (page, frame, originUrl) =>\n{\n  if (page)\n  {\n    let keys = sitekeys.get(page);\n    if (keys)\n    {\n      for (; frame; frame = frame.parent)\n      {\n        let key = keys.get(stringifyURL(frame.url));\n        if (key)\n          return key;\n      }\n    }\n  }\n\n  if (originUrl)\n  {\n    for (let keys of sitekeys._map.values())\n    {\n      let key = keys.get(stringifyURL(originUrl));\n      if (key)\n        return key;\n    }\n  }\n\n  return null;\n};\n\nfunction checkKey(token, url)\n{\n  let parts = token.split(\"_\");\n  if (parts.length < 2)\n    return false;\n\n  let key = parts[0].replace(/=/g, \"\");\n  let signature = parts[1];\n  let data = url.pathname + url.search + \"\\0\" +\n             url.host + \"\\0\" +\n             window.navigator.userAgent;\n  if (!verifySignature(key, signature, data))\n    return false;\n\n  return key;\n}\n\nfunction recordKey(key, page, url)\n{\n  let keys = sitekeys.get(page);\n  if (!keys)\n  {\n    keys = new Map();\n    sitekeys.set(page, keys);\n  }\n  keys.set(stringifyURL(url), key);\n}\n\nport.on(\"filters.addKey\", (message, sender) =>\n{\n  let key = checkKey(message.token, sender.frame.url);\n  if (key)\n    recordKey(key, sender.page, sender.frame.url);\n});\n\nfunction onHeadersReceived(details)\n{\n  let page = new ext.Page({id: details.tabId});\n\n  for (let header of details.responseHeaders)\n  {\n    if (header.name.toLowerCase() == \"x-adblock-key\" && header.value)\n    {\n      let url = new URL(details.url);\n      let key = checkKey(header.value, url);\n      if (key)\n      {\n        recordKey(key, page, url);\n        break;\n      }\n    }\n  }\n}\n\nif (typeof browser == \"object\")\n{\n  browser.webRequest.onHeadersReceived.addListener(\n    onHeadersReceived,\n    {\n      urls: [\"http://*/*\", \"https://*/*\"],\n      types: [\"main_frame\", \"sub_frame\"]\n    },\n    [\"responseHeaders\"]\n  );\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/whitelisting.js\n// module id = 22\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nconst {RegExpFilter,\n       WhitelistFilter,\n       ElemHideFilter} = require(\"../adblockpluscore/lib/filterClasses\");\nconst {SpecialSubscription} =\n  require(\"../adblockpluscore/lib/subscriptionClasses\");\nconst {FilterStorage} = require(\"../adblockpluscore/lib/filterStorage\");\nconst {defaultMatcher} = require(\"../adblockpluscore/lib/matcher\");\nconst {FilterNotifier} = require(\"../adblockpluscore/lib/filterNotifier\");\nconst {extractHostFromFrame} = require(\"./url\");\nconst {port} = require(\"./messaging\");\n\nconst nonRequestTypes = [\"DOCUMENT\", \"ELEMHIDE\",\n                         \"GENERICBLOCK\", \"GENERICHIDE\", \"CSP\"];\n\nlet panels = new Map();\n\nfunction isActivePanel(panel)\n{\n  return panel && !panel.reload && !panel.reloading;\n}\n\nfunction getActivePanel(tabId)\n{\n  let panel = panels.get(tabId);\n  if (isActivePanel(panel))\n    return panel;\n  return null;\n}\n\nfunction getFilterInfo(filter)\n{\n  if (!filter)\n    return null;\n\n  let userDefined = false;\n  let subscriptionTitle = null;\n\n  for (let subscription of filter.subscriptions)\n  {\n    if (!subscription.disabled)\n    {\n      if (subscription instanceof SpecialSubscription)\n        userDefined = true;\n      else\n        subscriptionTitle = subscription.title;\n    }\n  }\n\n  return {\n    text: filter.text,\n    whitelisted: filter instanceof WhitelistFilter,\n    userDefined,\n    subscription: subscriptionTitle\n  };\n}\n\nfunction hasRecord(panel, request, filter)\n{\n  return panel.records.some(record =>\n    record.request.url == request.url &&\n    record.request.docDomain == request.docDomain &&\n\n    // Ignore partial (e.g. ELEMHIDE) whitelisting if there is already\n    // a DOCUMENT exception which disables all means of blocking.\n    (record.request.type == \"DOCUMENT\" ?\n       nonRequestTypes.includes(request.type) :\n       record.request.type == request.type) &&\n\n    // Matched element hiding filters don't relate to a particular request,\n    // so we have to compare the selector in order to avoid duplicates.\n    (record.filter && record.filter.selector) == (filter && filter.selector)\n  );\n}\n\nfunction addRecord(panel, request, filter)\n{\n  if (!hasRecord(panel, request, filter))\n  {\n    panel.port.postMessage({\n      type: \"add-record\",\n      request,\n      filter: getFilterInfo(filter)\n    });\n\n    panel.records.push({request, filter});\n  }\n}\n\nfunction matchRequest(request)\n{\n  return defaultMatcher.matchesAny(\n    request.url,\n    RegExpFilter.typeMap[request.type],\n    request.docDomain,\n    request.thirdParty,\n    request.sitekey,\n    request.specificOnly\n  );\n}\n\n/**\n * Logs a request to the devtools panel.\n *\n * @param {number[]} tabIds        The tabIds associated with the request\n * @param {string}   url           The URL of the request\n * @param {string}   type          The request type\n * @param {string}   docDomain     The IDN-decoded hostname of the document\n * @param {boolean}  thirdParty    Whether the origin of the request and\n *                                 document differs\n * @param {?string}  sitekey       The active sitekey if there is any\n * @param {?boolean} specificOnly  Whether generic filters should be ignored\n * @param {?BlockingFilter} filter The matched filter or null if there is no\n *                                 match\n */\nexports.logRequest = function(tabIds, url, type, docDomain,\n                              thirdParty, sitekey,\n                              specificOnly, filter)\n{\n  for (let tabId of tabIds)\n  {\n    let panel = getActivePanel(tabId);\n    if (panel)\n    {\n      let request = {url, type, docDomain, thirdParty, sitekey, specificOnly};\n      addRecord(panel, request, filter);\n    }\n  }\n};\n\n/**\n * Logs active element hiding filters to the devtools panel.\n *\n * @param {number}   tabId      The ID of the tab, the elements were hidden in\n * @param {string[]} selectors  The selectors of applied ElemHideFilters\n * @param {string[]} filters    The text of applied ElemHideEmulationFilters\n * @param {string}   docDomain  The IDN-decoded hostname of the document\n */\nfunction logHiddenElements(tabId, selectors, filters, docDomain)\n{\n  let panel = getActivePanel(tabId);\n  if (panel)\n  {\n    for (let subscription of FilterStorage.subscriptions)\n    {\n      if (subscription.disabled)\n        continue;\n\n      for (let filter of subscription.filters)\n      {\n        // We only know the exact filter in case of element hiding emulation.\n        // For regular element hiding filters, the content script only knows\n        // the selector, so we have to find a filter that has an identical\n        // selector and is active on the domain the match was reported from.\n        let isActiveElemHideFilter = filter instanceof ElemHideFilter &&\n                                     selectors.includes(filter.selector) &&\n                                     filter.isActiveOnDomain(docDomain);\n\n        if (isActiveElemHideFilter || filters.includes(filter.text))\n          addRecord(panel, {type: \"ELEMHIDE\", docDomain}, filter);\n      }\n    }\n  }\n}\n\n/**\n * Logs a whitelisting filter, that disables (some kind of)\n * blocking for a particular document, to the devtools panel.\n *\n * @param {number}       tabId     The tabId the whitelisting is active for\n * @param {string}       url       The url of the whitelisted document\n * @param {number}       typeMask  The bit mask of whitelisting types checked\n *                                 for\n * @param {string}       docDomain The IDN-decoded hostname of the parent\n *                                 document\n * @param {WhitelistFilter} filter The matched whitelisting filter\n */\nexports.logWhitelistedDocument = function(tabId, url, typeMask, docDomain,\n                                          filter)\n{\n  let panel = getActivePanel(tabId);\n  if (panel)\n  {\n    for (let type of nonRequestTypes)\n    {\n      if (typeMask & filter.contentType & RegExpFilter.typeMap[type])\n        addRecord(panel, {url, type, docDomain}, filter);\n    }\n  }\n};\n\n/**\n * Checks whether a tab is inspected by the devtools panel.\n *\n * @param {number} tabId\n * @return {boolean}\n */\nexports.hasPanel = function(tabId)\n{\n  return panels.has(tabId);\n};\n\nfunction onBeforeRequest(details)\n{\n  let panel = panels.get(details.tabId);\n\n  // Clear the devtools panel and reload the inspected tab without caching\n  // when a new request is issued. However, make sure that we don't end up\n  // in an infinite recursion if we already triggered a reload.\n  if (panel.reloading)\n  {\n    panel.reloading = false;\n  }\n  else\n  {\n    panel.records = [];\n    panel.port.postMessage({type: \"reset\"});\n\n    // We can't repeat the request if it isn't a GET request. Chrome would\n    // prompt the user to confirm reloading the page, and POST requests are\n    // known to cause issues on many websites if repeated.\n    if (details.method == \"GET\")\n      panel.reload = true;\n  }\n}\n\nfunction onLoading(page)\n{\n  let tabId = page.id;\n  let panel = panels.get(tabId);\n\n  // Reloading the tab is the only way that allows bypassing all caches, in\n  // order to see all requests in the devtools panel. Reloading must not be\n  // performed before the tab changes to \"loading\", otherwise it will load the\n  // previous URL.\n  if (panel && panel.reload)\n  {\n    browser.tabs.reload(tabId, {bypassCache: true});\n\n    panel.reload = false;\n    panel.reloading = true;\n  }\n}\n\nfunction updateFilters(filters, added)\n{\n  for (let panel of panels.values())\n  {\n    for (let i = 0; i < panel.records.length; i++)\n    {\n      let record = panel.records[i];\n\n      // If an added filter matches a request shown in the devtools panel,\n      // update that record to show the new filter. Ignore filters that aren't\n      // associated with any sub-resource request. There is no record for these\n      // if they don't already match. In particular, in case of element hiding\n      // filters, we also wouldn't know if any new element matches.\n      if (added)\n      {\n        if (nonRequestTypes.includes(record.request.type))\n          continue;\n\n        let filter = matchRequest(record.request);\n        if (!filters.includes(filter))\n          continue;\n\n        record.filter = filter;\n      }\n\n      // If a filter shown in the devtools panel got removed, update that\n      // record to show the filter that matches now, or none, instead.\n      // For filters that aren't associated with any sub-resource request,\n      // just remove the record. We wouldn't know whether another filter\n      // matches instead until the page is reloaded.\n      else\n      {\n        if (!filters.includes(record.filter))\n          continue;\n\n        if (nonRequestTypes.includes(record.request.type))\n        {\n          panel.port.postMessage({\n            type: \"remove-record\",\n            index: i\n          });\n          panel.records.splice(i--, 1);\n          continue;\n        }\n\n        record.filter = matchRequest(record.request);\n      }\n\n      panel.port.postMessage({\n        type: \"update-record\",\n        index: i,\n        request: record.request,\n        filter: getFilterInfo(record.filter)\n      });\n    }\n  }\n}\n\nfunction onFilterAdded(filter)\n{\n  updateFilters([filter], true);\n}\n\nfunction onFilterRemoved(filter)\n{\n  updateFilters([filter], false);\n}\n\nfunction onSubscriptionAdded(subscription)\n{\n  if (subscription instanceof SpecialSubscription)\n    updateFilters(subscription.filters, true);\n}\n\nbrowser.runtime.onConnect.addListener(newPort =>\n{\n  let match = newPort.name.match(/^devtools-(\\d+)$/);\n  if (!match)\n    return;\n\n  let inspectedTabId = parseInt(match[1], 10);\n  let localOnBeforeRequest = onBeforeRequest.bind();\n\n  browser.webRequest.onBeforeRequest.addListener(\n    localOnBeforeRequest,\n    {\n      urls: [\"http://*/*\", \"https://*/*\"],\n      types: [\"main_frame\"],\n      tabId: inspectedTabId\n    }\n  );\n\n  if (panels.size == 0)\n  {\n    ext.pages.onLoading.addListener(onLoading);\n    FilterNotifier.on(\"filter.added\", onFilterAdded);\n    FilterNotifier.on(\"filter.removed\", onFilterRemoved);\n    FilterNotifier.on(\"subscription.added\", onSubscriptionAdded);\n  }\n\n  newPort.onDisconnect.addListener(() =>\n  {\n    panels.delete(inspectedTabId);\n    browser.webRequest.onBeforeRequest.removeListener(localOnBeforeRequest);\n\n    if (panels.size == 0)\n    {\n      ext.pages.onLoading.removeListener(onLoading);\n      FilterNotifier.off(\"filter.added\", onFilterAdded);\n      FilterNotifier.off(\"filter.removed\", onFilterRemoved);\n      FilterNotifier.off(\"subscription.added\", onSubscriptionAdded);\n    }\n  });\n\n  panels.set(inspectedTabId, {port: newPort, records: []});\n});\n\nport.on(\"devtools.traceElemHide\", (message, sender) =>\n{\n  logHiddenElements(\n    sender.page.id, message.selectors, message.filters,\n    extractHostFromFrame(sender.frame)\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/devtools.js\n// module id = 23\n// module chunks = 0","/*\n * This file is part of Adblock Plus <https://adblockplus.org/>,\n * Copyright (C) 2006-present eyeo GmbH\n *\n * Adblock Plus is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as\n * published by the Free Software Foundation.\n *\n * Adblock Plus is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/* global console */\n\n\"use strict\";\n\n/**\n * This is a specialized RSA library meant only to verify SHA1-based signatures.\n */\n\nconst {BigInteger} = require(\"jsbn\");\nconst Rusha = require(\"rusha\");\n\nlet rusha = new Rusha();\n\n// Define ASN.1 templates for the data structures used\nfunction seq(...args)\n{\n  return {type: 0x30, children: args};\n}\nfunction obj(id)\n{\n  return {type: 0x06, content: id};\n}\nfunction bitStr(contents)\n{\n  return {type: 0x03, encapsulates: contents};\n}\nfunction intResult(id)\n{\n  return {type: 0x02, out: id};\n}\nfunction octetResult(id)\n{\n  return {type: 0x04, out: id};\n}\n\n// See http://www.cryptopp.com/wiki/Keys_and_Formats#RSA_PublicKey\n// 2A 86 48 86 F7 0D 01 01 01 means 1.2.840.113549.1.1.1\nlet publicKeyTemplate = seq(\n  seq(obj(\"\\x2A\\x86\\x48\\x86\\xF7\\x0D\\x01\\x01\\x01\"), {}),\n  bitStr(seq(intResult(\"n\"), intResult(\"e\")))\n);\n\n// See http://tools.ietf.org/html/rfc3447#section-9.2 step 2\n// 2B 0E 03 02 1A means 1.3.14.3.2.26\nlet signatureTemplate = seq(\n  seq(obj(\"\\x2B\\x0E\\x03\\x02\\x1A\"), {}),\n  octetResult(\"sha1\")\n);\n\n/**\n * Reads ASN.1 data matching the template passed in. This will throw an\n * exception if the data format doesn't match the template. On success an\n * object containing result properties is returned.\n * @see http://luca.ntop.org/Teaching/Appunti/asn1.html for info on the format.\n * @param {string} data\n * @param {Object} templ\n * @returns {Object}\n */\nfunction readASN1(data, templ)\n{\n  let pos = 0;\n  function next()\n  {\n    return data.charCodeAt(pos++);\n  }\n\n  function readLength()\n  {\n    let len = next();\n    if (len & 0x80)\n    {\n      let cnt = len & 0x7F;\n      if (cnt > 2 || cnt == 0)\n        throw \"Unsupported length\";\n\n      len = 0;\n      for (let i = 0; i < cnt; i++)\n        len += next() << (cnt - 1 - i) * 8;\n      return len;\n    }\n    return len;\n  }\n\n  function readNode(curTempl)\n  {\n    let type = next();\n    let len = readLength();\n    if (\"type\" in curTempl && curTempl.type != type)\n      throw \"Unexpected type\";\n    if (\"content\" in curTempl && curTempl.content != data.substr(pos, len))\n      throw \"Unexpected content\";\n    if (\"out\" in curTempl)\n      out[curTempl.out] = new BigInteger(data.substr(pos, len), 256);\n    if (\"children\" in curTempl)\n    {\n      let i;\n      let end;\n      for (i = 0, end = pos + len; pos < end; i++)\n      {\n        if (i >= curTempl.children.length)\n          throw \"Too many children\";\n        readNode(curTempl.children[i]);\n      }\n      if (i < curTempl.children.length)\n        throw \"Too few children\";\n      if (pos > end)\n        throw \"Children too large\";\n    }\n    else if (\"encapsulates\" in curTempl)\n    {\n      if (next() != 0)\n        throw \"Encapsulation expected\";\n      readNode(curTempl.encapsulates);\n    }\n    else\n      pos += len;\n  }\n\n  let out = {};\n  readNode(templ);\n  if (pos != data.length)\n    throw \"Too much data\";\n  return out;\n}\n\n/**\n * Reads a BER-encoded RSA public key. On success returns an object with the\n * properties n and e (the components of the key), otherwise null.\n * @param {string} key\n * @return {?Object}\n */\nfunction readPublicKey(key)\n{\n  try\n  {\n    return readASN1(atob(key), publicKeyTemplate);\n  }\n  catch (e)\n  {\n    console.warn(\"Invalid RSA public key: \" + e);\n    return null;\n  }\n}\n\n/**\n * Checks whether the signature is valid for the given public key and data.\n * @param {string} key\n * @param {string} signature\n * @param {string} data\n * @return {boolean}\n */\nfunction verifySignature(key, signature, data)\n{\n  let keyData = readPublicKey(key);\n  if (!keyData)\n    return false;\n\n  // We need the exponent as regular number\n  keyData.e = parseInt(keyData.e.toString(16), 16);\n\n  // Decrypt signature data using RSA algorithm\n  let sigInt = new BigInteger(atob(signature), 256);\n  let digest = sigInt.modPowInt(keyData.e, keyData.n).toString(256);\n\n  try\n  {\n    let pos = 0;\n    let next = () => digest.charCodeAt(pos++);\n\n    // Skip padding, see http://tools.ietf.org/html/rfc3447#section-9.2 step 5\n    if (next() != 1)\n      throw \"Wrong padding in signature digest\";\n    while (next() == 255) {}\n    if (digest.charCodeAt(pos - 1) != 0)\n      throw \"Wrong padding in signature digest\";\n\n    // Rest is an ASN.1 structure, get the SHA1 hash from it and compare to\n    // the real one\n    let {sha1} = readASN1(digest.substr(pos), signatureTemplate);\n    let expected = new BigInteger(rusha.digest(data), 16);\n    return (sha1.compareTo(expected) == 0);\n  }\n  catch (e)\n  {\n    console.warn(\"Invalid encrypted signature: \" + e);\n    return false;\n  }\n}\nexports.verifySignature = verifySignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/rsa.js\n// module id = 24\n// module chunks = 0","/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nexports.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this[i++]+w[j]+c;\n    c = Math.floor(v/0x4000000);\n    w[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this[i]&0x7fff;\n    var h = this[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this[i]&0x3fff;\n    var h = this[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w[j++] = l&0xfffffff;\n  }\n  return c;\n}\nif(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this[0] = x;\n  else if(x < -1) this[0] = x+DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s.charCodeAt(i)&0xff:intAt(s,i);   /** MODIFIED **/\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this[this.t++] = (x>>(this.DB-sh));\n    }\n    else\n      this[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array      /** MODIFIED **/\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = (k==8)?String.fromCharCode(d):int2char(d); }   /** MODIFIED **/\n    while(i >= 0) {\n      if(p < k) {\n        d = (this[i]&((1<<p)-1))<<(k-p);\n        d |= this[--i]>>(p+=this.DB-k);\n      }\n      else {\n        d = (this[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += (k==8)?String.fromCharCode(d):int2char(d);    /** MODIFIED **/\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return r;\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n  for(i = n-1; i >= 0; --i) r[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r[i+ds+1] = (this[i]>>cbs)|c;\n    c = (this[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r[0] = this[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\n    r[i-ds] = this[i]>>bs;\n  }\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]-a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r[i++] = this.DV+c;\n  else if(c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x[i],r,2*i,0,1);\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r[i+x.t] -= x.DV;\n      r[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n  else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/jsbn.js\n// module id = 25\n// module chunks = 0","(function () {\n    var /*\n * Rusha, a JavaScript implementation of the Secure Hash Algorithm, SHA-1,\n * as defined in FIPS PUB 180-1, tuned for high performance with large inputs.\n * (http://github.com/srijs/rusha)\n *\n * Inspired by Paul Johnstons implementation (http://pajhome.org.uk/crypt/md5).\n *\n * Copyright (c) 2013 Sam Rijs (http://awesam.de).\n * Released under the terms of the MIT license as follows:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n    util = {\n        getDataType: function (data) {\n            if (typeof data === 'string') {\n                return 'string';\n            }\n            if (data instanceof Array) {\n                return 'array';\n            }\n            if (typeof global !== 'undefined' && global.Buffer && global.Buffer.isBuffer(data)) {\n                return 'buffer';\n            }\n            if (data instanceof ArrayBuffer) {\n                return 'arraybuffer';\n            }\n            if (data.buffer instanceof ArrayBuffer) {\n                return 'view';\n            }\n            if (data instanceof Blob) {\n                return 'blob';\n            }\n            throw new Error('Unsupported data type.');\n        }\n    };\n    function Rusha(chunkSize) {\n        'use strict';\n        var // Private object structure.\n        self$2 = { fill: 0 };\n        var // Calculate the length of buffer that the sha1 routine uses\n        // including the padding.\n        padlen = function (len) {\n            for (len += 9; len % 64 > 0; len += 1);\n            return len;\n        };\n        var padZeroes = function (bin, len) {\n            for (var i$2 = len >> 2; i$2 < bin.length; i$2++)\n                bin[i$2] = 0;\n        };\n        var padData = function (bin, chunkLen, msgLen) {\n            bin[chunkLen >> 2] |= 128 << 24 - (chunkLen % 4 << 3);\n            // To support msgLen >= 2 GiB, use a float division when computing the\n            // high 32-bits of the big-endian message length in bits.\n            bin[((chunkLen >> 2) + 2 & ~15) + 14] = msgLen / (1 << 29) | 0;\n            bin[((chunkLen >> 2) + 2 & ~15) + 15] = msgLen << 3;\n        };\n        var // Convert a binary string and write it to the heap.\n        // A binary string is expected to only contain char codes < 256.\n        convStr = function (H8, H32, start, len, off) {\n            var str = this, i$2, om = off % 4, lm = len % 4, j = len - lm;\n            if (j > 0) {\n                switch (om) {\n                case 0:\n                    H8[off + 3 | 0] = str.charCodeAt(start);\n                case 1:\n                    H8[off + 2 | 0] = str.charCodeAt(start + 1);\n                case 2:\n                    H8[off + 1 | 0] = str.charCodeAt(start + 2);\n                case 3:\n                    H8[off | 0] = str.charCodeAt(start + 3);\n                }\n            }\n            for (i$2 = om; i$2 < j; i$2 = i$2 + 4 | 0) {\n                H32[off + i$2 >> 2] = str.charCodeAt(start + i$2) << 24 | str.charCodeAt(start + i$2 + 1) << 16 | str.charCodeAt(start + i$2 + 2) << 8 | str.charCodeAt(start + i$2 + 3);\n            }\n            switch (lm) {\n            case 3:\n                H8[off + j + 1 | 0] = str.charCodeAt(start + j + 2);\n            case 2:\n                H8[off + j + 2 | 0] = str.charCodeAt(start + j + 1);\n            case 1:\n                H8[off + j + 3 | 0] = str.charCodeAt(start + j);\n            }\n        };\n        var // Convert a buffer or array and write it to the heap.\n        // The buffer or array is expected to only contain elements < 256.\n        convBuf = function (H8, H32, start, len, off) {\n            var buf = this, i$2, om = off % 4, lm = len % 4, j = len - lm;\n            if (j > 0) {\n                switch (om) {\n                case 0:\n                    H8[off + 3 | 0] = buf[start];\n                case 1:\n                    H8[off + 2 | 0] = buf[start + 1];\n                case 2:\n                    H8[off + 1 | 0] = buf[start + 2];\n                case 3:\n                    H8[off | 0] = buf[start + 3];\n                }\n            }\n            for (i$2 = 4 - om; i$2 < j; i$2 = i$2 += 4 | 0) {\n                H32[off + i$2 >> 2] = buf[start + i$2] << 24 | buf[start + i$2 + 1] << 16 | buf[start + i$2 + 2] << 8 | buf[start + i$2 + 3];\n            }\n            switch (lm) {\n            case 3:\n                H8[off + j + 1 | 0] = buf[start + j + 2];\n            case 2:\n                H8[off + j + 2 | 0] = buf[start + j + 1];\n            case 1:\n                H8[off + j + 3 | 0] = buf[start + j];\n            }\n        };\n        var convBlob = function (H8, H32, start, len, off) {\n            var blob = this, i$2, om = off % 4, lm = len % 4, j = len - lm;\n            var buf = new Uint8Array(reader.readAsArrayBuffer(blob.slice(start, start + len)));\n            if (j > 0) {\n                switch (om) {\n                case 0:\n                    H8[off + 3 | 0] = buf[0];\n                case 1:\n                    H8[off + 2 | 0] = buf[1];\n                case 2:\n                    H8[off + 1 | 0] = buf[2];\n                case 3:\n                    H8[off | 0] = buf[3];\n                }\n            }\n            for (i$2 = 4 - om; i$2 < j; i$2 = i$2 += 4 | 0) {\n                H32[off + i$2 >> 2] = buf[i$2] << 24 | buf[i$2 + 1] << 16 | buf[i$2 + 2] << 8 | buf[i$2 + 3];\n            }\n            switch (lm) {\n            case 3:\n                H8[off + j + 1 | 0] = buf[j + 2];\n            case 2:\n                H8[off + j + 2 | 0] = buf[j + 1];\n            case 1:\n                H8[off + j + 3 | 0] = buf[j];\n            }\n        };\n        var convFn = function (data) {\n            switch (util.getDataType(data)) {\n            case 'string':\n                return convStr.bind(data);\n            case 'array':\n                return convBuf.bind(data);\n            case 'buffer':\n                return convBuf.bind(data);\n            case 'arraybuffer':\n                return convBuf.bind(new Uint8Array(data));\n            case 'view':\n                return convBuf.bind(new Uint8Array(data.buffer, data.byteOffset, data.byteLength));\n            case 'blob':\n                return convBlob.bind(data);\n            }\n        };\n        var slice = function (data, offset) {\n            switch (util.getDataType(data)) {\n            case 'string':\n                return data.slice(offset);\n            case 'array':\n                return data.slice(offset);\n            case 'buffer':\n                return data.slice(offset);\n            case 'arraybuffer':\n                return data.slice(offset);\n            case 'view':\n                return data.buffer.slice(offset);\n            }\n        };\n        var // Precompute 00 - ff strings\n        precomputedHex = new Array(256);\n        for (var i = 0; i < 256; i++) {\n            precomputedHex[i] = (i < 16 ? '0' : '') + i.toString(16);\n        }\n        var // Convert an ArrayBuffer into its hexadecimal string representation.\n        hex = function (arrayBuffer) {\n            var binarray = new Uint8Array(arrayBuffer);\n            var res = new Array(arrayBuffer.byteLength);\n            for (var i$2 = 0; i$2 < res.length; i$2++) {\n                res[i$2] = precomputedHex[binarray[i$2]];\n            }\n            return res.join('');\n        };\n        var ceilHeapSize = function (v) {\n            // The asm.js spec says:\n            // The heap object's byteLength must be either\n            // 2^n for n in [12, 24) or 2^24 * n for n ≥ 1.\n            // Also, byteLengths smaller than 2^16 are deprecated.\n            var p;\n            if (// If v is smaller than 2^16, the smallest possible solution\n                // is 2^16.\n                v <= 65536)\n                return 65536;\n            if (// If v < 2^24, we round up to 2^n,\n                // otherwise we round up to 2^24 * n.\n                v < 16777216) {\n                for (p = 1; p < v; p = p << 1);\n            } else {\n                for (p = 16777216; p < v; p += 16777216);\n            }\n            return p;\n        };\n        var // Initialize the internal data structures to a new capacity.\n        init = function (size) {\n            if (size % 64 > 0) {\n                throw new Error('Chunk size must be a multiple of 128 bit');\n            }\n            self$2.maxChunkLen = size;\n            self$2.padMaxChunkLen = padlen(size);\n            // The size of the heap is the sum of:\n            // 1. The padded input message size\n            // 2. The extended space the algorithm needs (320 byte)\n            // 3. The 160 bit state the algoritm uses\n            self$2.heap = new ArrayBuffer(ceilHeapSize(self$2.padMaxChunkLen + 320 + 20));\n            self$2.h32 = new Int32Array(self$2.heap);\n            self$2.h8 = new Int8Array(self$2.heap);\n            self$2.core = new Rusha._core({\n                Int32Array: Int32Array,\n                DataView: DataView\n            }, {}, self$2.heap);\n            self$2.buffer = null;\n        };\n        // Iinitializethe datastructures according\n        // to a chunk siyze.\n        init(chunkSize || 64 * 1024);\n        var initState = function (heap, padMsgLen) {\n            var io = new Int32Array(heap, padMsgLen + 320, 5);\n            io[0] = 1732584193;\n            io[1] = -271733879;\n            io[2] = -1732584194;\n            io[3] = 271733878;\n            io[4] = -1009589776;\n        };\n        var padChunk = function (chunkLen, msgLen) {\n            var padChunkLen = padlen(chunkLen);\n            var view = new Int32Array(self$2.heap, 0, padChunkLen >> 2);\n            padZeroes(view, chunkLen);\n            padData(view, chunkLen, msgLen);\n            return padChunkLen;\n        };\n        var // Write data to the heap.\n        write = function (data, chunkOffset, chunkLen) {\n            convFn(data)(self$2.h8, self$2.h32, chunkOffset, chunkLen, 0);\n        };\n        var // Initialize and call the RushaCore,\n        // assuming an input buffer of length len * 4.\n        coreCall = function (data, chunkOffset, chunkLen, msgLen, finalize) {\n            var padChunkLen = chunkLen;\n            if (finalize) {\n                padChunkLen = padChunk(chunkLen, msgLen);\n            }\n            write(data, chunkOffset, chunkLen);\n            self$2.core.hash(padChunkLen, self$2.padMaxChunkLen);\n        };\n        var getRawDigest = function (heap, padMaxChunkLen) {\n            var io = new Int32Array(heap, padMaxChunkLen + 320, 5);\n            var out = new Int32Array(5);\n            var arr = new DataView(out.buffer);\n            arr.setInt32(0, io[0], false);\n            arr.setInt32(4, io[1], false);\n            arr.setInt32(8, io[2], false);\n            arr.setInt32(12, io[3], false);\n            arr.setInt32(16, io[4], false);\n            return out;\n        };\n        var // Calculate the hash digest as an array of 5 32bit integers.\n        rawDigest = this.rawDigest = function (str) {\n            var msgLen = str.byteLength || str.length || str.size || 0;\n            initState(self$2.heap, self$2.padMaxChunkLen);\n            var chunkOffset = 0, chunkLen = self$2.maxChunkLen, last;\n            for (chunkOffset = 0; msgLen > chunkOffset + chunkLen; chunkOffset += chunkLen) {\n                coreCall(str, chunkOffset, chunkLen, msgLen, false);\n            }\n            coreCall(str, chunkOffset, msgLen - chunkOffset, msgLen, true);\n            return getRawDigest(self$2.heap, self$2.padMaxChunkLen);\n        };\n        // The digest and digestFrom* interface returns the hash digest\n        // as a hex string.\n        this.digest = this.digestFromString = this.digestFromBuffer = this.digestFromArrayBuffer = function (str) {\n            return hex(rawDigest(str).buffer);\n        };\n    }\n    ;\n    // The low-level RushCore module provides the heart of Rusha,\n    // a high-speed sha1 implementation working on an Int32Array heap.\n    // At first glance, the implementation seems complicated, however\n    // with the SHA1 spec at hand, it is obvious this almost a textbook\n    // implementation that has a few functions hand-inlined and a few loops\n    // hand-unrolled.\n    Rusha._core = function RushaCore(stdlib, foreign, heap) {\n        'use asm';\n        var H = new stdlib.Int32Array(heap);\n        function hash(k, x) {\n            // k in bytes\n            k = k | 0;\n            x = x | 0;\n            var i = 0, j = 0, y0 = 0, z0 = 0, y1 = 0, z1 = 0, y2 = 0, z2 = 0, y3 = 0, z3 = 0, y4 = 0, z4 = 0, t0 = 0, t1 = 0;\n            y0 = H[x + 320 >> 2] | 0;\n            y1 = H[x + 324 >> 2] | 0;\n            y2 = H[x + 328 >> 2] | 0;\n            y3 = H[x + 332 >> 2] | 0;\n            y4 = H[x + 336 >> 2] | 0;\n            for (i = 0; (i | 0) < (k | 0); i = i + 64 | 0) {\n                z0 = y0;\n                z1 = y1;\n                z2 = y2;\n                z3 = y3;\n                z4 = y4;\n                for (j = 0; (j | 0) < 64; j = j + 4 | 0) {\n                    t1 = H[i + j >> 2] | 0;\n                    t0 = ((y0 << 5 | y0 >>> 27) + (y1 & y2 | ~y1 & y3) | 0) + ((t1 + y4 | 0) + 1518500249 | 0) | 0;\n                    y4 = y3;\n                    y3 = y2;\n                    y2 = y1 << 30 | y1 >>> 2;\n                    y1 = y0;\n                    y0 = t0;\n                    H[k + j >> 2] = t1;\n                }\n                for (j = k + 64 | 0; (j | 0) < (k + 80 | 0); j = j + 4 | 0) {\n                    t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;\n                    t0 = ((y0 << 5 | y0 >>> 27) + (y1 & y2 | ~y1 & y3) | 0) + ((t1 + y4 | 0) + 1518500249 | 0) | 0;\n                    y4 = y3;\n                    y3 = y2;\n                    y2 = y1 << 30 | y1 >>> 2;\n                    y1 = y0;\n                    y0 = t0;\n                    H[j >> 2] = t1;\n                }\n                for (j = k + 80 | 0; (j | 0) < (k + 160 | 0); j = j + 4 | 0) {\n                    t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;\n                    t0 = ((y0 << 5 | y0 >>> 27) + (y1 ^ y2 ^ y3) | 0) + ((t1 + y4 | 0) + 1859775393 | 0) | 0;\n                    y4 = y3;\n                    y3 = y2;\n                    y2 = y1 << 30 | y1 >>> 2;\n                    y1 = y0;\n                    y0 = t0;\n                    H[j >> 2] = t1;\n                }\n                for (j = k + 160 | 0; (j | 0) < (k + 240 | 0); j = j + 4 | 0) {\n                    t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;\n                    t0 = ((y0 << 5 | y0 >>> 27) + (y1 & y2 | y1 & y3 | y2 & y3) | 0) + ((t1 + y4 | 0) - 1894007588 | 0) | 0;\n                    y4 = y3;\n                    y3 = y2;\n                    y2 = y1 << 30 | y1 >>> 2;\n                    y1 = y0;\n                    y0 = t0;\n                    H[j >> 2] = t1;\n                }\n                for (j = k + 240 | 0; (j | 0) < (k + 320 | 0); j = j + 4 | 0) {\n                    t1 = (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) << 1 | (H[j - 12 >> 2] ^ H[j - 32 >> 2] ^ H[j - 56 >> 2] ^ H[j - 64 >> 2]) >>> 31;\n                    t0 = ((y0 << 5 | y0 >>> 27) + (y1 ^ y2 ^ y3) | 0) + ((t1 + y4 | 0) - 899497514 | 0) | 0;\n                    y4 = y3;\n                    y3 = y2;\n                    y2 = y1 << 30 | y1 >>> 2;\n                    y1 = y0;\n                    y0 = t0;\n                    H[j >> 2] = t1;\n                }\n                y0 = y0 + z0 | 0;\n                y1 = y1 + z1 | 0;\n                y2 = y2 + z2 | 0;\n                y3 = y3 + z3 | 0;\n                y4 = y4 + z4 | 0;\n            }\n            H[x + 320 >> 2] = y0;\n            H[x + 324 >> 2] = y1;\n            H[x + 328 >> 2] = y2;\n            H[x + 332 >> 2] = y3;\n            H[x + 336 >> 2] = y4;\n        }\n        return { hash: hash };\n    };\n    exports = Rusha;\n    if (// If we'e running in Node.JS, export a module.\n        typeof module !== 'undefined') {\n        module.exports = Rusha;\n    } else {// If we're running in Adblock Plus, export a module.\n        exports = Rusha;\n    }\n    if (// If we're running in a webworker, accept\n        // messages containing a jobid and a buffer\n        // or blob object, and return the hash result.\n        typeof FileReaderSync !== 'undefined') {\n        var reader = new FileReaderSync(), hasher = new Rusha(4 * 1024 * 1024);\n        self.onmessage = function onMessage(event) {\n            var hash, data = event.data.data;\n            try {\n                hash = hasher.digest(data);\n                self.postMessage({\n                    id: event.data.id,\n                    hash: hash\n                });\n            } catch (e) {\n                self.postMessage({\n                    id: event.data.id,\n                    error: e.name\n                });\n            }\n        };\n    }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./adblockpluscore/lib/rusha.js\n// module id = 26\n// module chunks = 0"],"sourceRoot":""}